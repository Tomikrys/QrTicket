{"version":3,"sources":["constants/Colors.ts","components/Themed.tsx","hooks/useColorScheme.ts","screens/components/QrReader.tsx","screens/QrScreen.tsx","screens/TicketsScreen.tsx","screens/ManualValidationScreen.tsx","screens/SettingsScreen.tsx","navigation/index.tsx","App.tsx","hooks/useCachedResources.ts","assets/fonts/SpaceMono-Regular.ttf"],"names":["light","text","background","tint","tabIconDefault","tabIconSelected","dark","useThemeColor","props","colorName","theme","_useColorScheme","colorFromProps","Colors","View","style","lightColor","darkColor","otherProps","backgroundColor","QrReader","itemToValidate","markAsUsed","useState","hasPermission","setHasPermission","scanned","setScanned","modalVisiblity","setModalVisiblity","responseToModal","setResponseToModal","dataToModal","setDataToModal","useEffect","a","async","BarCodeScanner","requestPermissionsAsync","status","fetchUserData","user","fetch","then","res","json","data","message","user_data","ticketInterest","hasOwnProperty","includes","validateTicket","getTextForModal","catch","error","alert","Text","styles","container","ScannedModal","onBarCodeScanned","undefined","type","StyleSheet","absoluteFill","camera","layerTop","layerCenter","layerLeft","focused","layerRight","layerBottom","level","visible","disabled","Fragment","onPress","opacity","create","left","right","top","bottom","position","flex","width","flexDirection","QrScreen","ManualValidation","React","value","setValue","clearSearchBar","searchBox","autoCapitalize","autoCorrect","placeholder","size","searchBar","clearButtonMode","accessoryRight","TouchableWithoutFeedback","name","onChangeText","nextValue","justifyContent","minHeight","height","alignSelf","textAlign","button","backdrop","Tickets_data","title","description","BackIcon","SearchBar","TicketsScreen","renderItemIcon","renderEditIcon","icon","list","renderItem","item","index","key","accessoryLeft","listItem","padding","color","borderColor","borderRadius","alignItems","ManualValidationScreen","MyModal","setVisible","SettingsScreen","setItemToValidate","setMarkAsUsed","ticket_pieces","column","validate","setValidate","IndexPath","selectedItemIndex","setSelectedItemIndex","checked","onChange","selectedIndex","onSelect","indexToColumnName","map","ViewPagerNavigator","setSelectedIndex","viewpager","tab","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","FontAwesome","font","require","console","warn","useCachedResources","icons","EvaIconsPack","eva","StatusBar","hidden","module","exports"],"mappings":"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","file":"static/js/app.abc9ef2d.chunk.js","sourcesContent":["const tintColorLight = '#2f95dc';\nconst tintColorDark = '#fff';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n  },\n};\n","/**\n * Learn more about Light and Dark modes:\n * https://docs.expo.io/guides/color-schemes/\n */\n\nimport * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\n\n// The useColorScheme value is always either light or dark, but the built-in\n// type suggests that it can be null. This will not happen in practice, so this\n// makes it a bit easier to work with.\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\n}\n","import React, { useState, useEffect } from 'react';\r\nimport { Text, View, StyleSheet } from 'react-native';\r\nimport { BarCodeScanner } from 'expo-barcode-scanner';\r\nimport { Card, Layout, Modal, Button } from '@ui-kitten/components';\r\n\r\nexport default function QrReader({ itemToValidate, markAsUsed }) {\r\n  const [hasPermission, setHasPermission] = useState(null);\r\n  const [scanned, setScanned] = useState(false);\r\n  const [modalVisiblity, setModalVisiblity] = useState(false);\r\n  //response which is used by modal but not shown\r\n  const [responseToModal, setResponseToModal] = useState(null);\r\n  //data shown in modal\r\n  const [dataToModal, setDataToModal] = useState([\"\"]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const { status } = await BarCodeScanner.requestPermissionsAsync();\r\n      setHasPermission(status === 'granted');\r\n    })();\r\n  }, []);\r\n\r\n\r\n  //fetch all data about one user - user ID is data scanned from QR code\r\n  const fetchUserData = (user) => {\r\n    fetch(`https://sjezd-qr-ticket.herokuapp.com/get/${user}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setResponseToModal(data.message[0]);\r\n        setDataToModal(getTextForModal(responseToModal, itemToValidate));\r\n      })\r\n      .catch(function (error) {\r\n        alert(\"ERROR: Chyba připojení k databázi při načítání vstupenky.\" + error);\r\n      });\r\n    // .then(data => console.log(data));\r\n  };\r\n\r\n  // handler when bacrode is scanned\r\n  const handleBarCodeScanned = ({ type, data }) => {\r\n    setScanned(true);\r\n    setModalVisiblity(true)\r\n    fetchUserData(data);\r\n    // alert(`Bar code with type ${type} and data ${data} has been scanned! Chosen ${itemToValidate} doslo zpet ${JSON.stringify(responseToModal)}`);\r\n  };\r\n\r\n  if (hasPermission === null) {\r\n    return <Text>Requesting for camera permission</Text>;\r\n  }\r\n  if (hasPermission === false) {\r\n    return <Text>No access to camera</Text>;\r\n  }\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScannedModal modalVisiblity={modalVisiblity} setModalVisiblity={setModalVisiblity}\r\n        setScanned={setScanned} responseToModal={responseToModal} itemToValidate={itemToValidate} markAsUsed={markAsUsed}\r\n        dataToModal={dataToModal} />\r\n      {/* <ScannedModal /> */}\r\n      <BarCodeScanner\r\n        onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\r\n        style={[StyleSheet.absoluteFill, styles.camera]}>\r\n        <View style={styles.layerTop} />\r\n        <View style={styles.layerCenter}>\r\n          <View style={styles.layerLeft} />\r\n          <View style={styles.focused} />\r\n          <View style={styles.layerRight} />\r\n        </View>\r\n        <View style={styles.layerBottom} />\r\n      </BarCodeScanner>\r\n    </View>\r\n  );\r\n}\r\n\r\n//function gets object from server and checks if the required ticket is valid/used...\r\nfunction validateTicket(user_data, ticketInterest) {\r\n  if (!user_data) {\r\n    return \"error\";\r\n  } else if (user_data && user_data.hasOwnProperty(\"timestamp_\" + ticketInterest) && user_data[\"timestamp_\" + ticketInterest] !== null) {\r\n    return \"used\";\r\n  } else if (user_data && user_data.hasOwnProperty(ticketInterest) && [\"true\", \"all\", \"sobota\", \"maso\", \"bezmaso\"].includes(user_data[ticketInterest])) {\r\n    { // if (dataToModal) {\r\n      //TODO fetch na oznaceni vstupenky\r\n      //}\r\n      return \"ok\";\r\n    }\r\n  } else if (user_data && user_data.hasOwnProperty(ticketInterest) && [null, \"\", false].includes(user_data[ticketInterest])) {\r\n    return \"not\";\r\n  } else {\r\n    return \"error\";\r\n  }\r\n}\r\n\r\n\r\nfunction getTextForModal(user_data, ticketInterest) {\r\n  let res = validateTicket(user_data, ticketInterest);\r\n  if (res == \"used\") {\r\n    return [\"yellow\", \"Vstupenka již byla odbavena dříve!\"]\r\n  } else if (res == \"ok\") {\r\n    return [\"green\", \"Vstupenka odbavena.\"]\r\n  } else if (res == \"not\") {\r\n    return [\"orange\", \"Nezakoupeno!\"]\r\n  } else {\r\n    return [\"red\", \"Nastala chyba\"]\r\n  }\r\n}\r\n\r\nfunction ScannedModal({ modalVisiblity, setModalVisiblity, setScanned, responseToModal, itemToValidate, markAsUsed, dataToModal }) {\r\n  // function ScannedModal() {\r\n  // const [modalVisiblity, setModalVisiblity] = useState(false);\r\n  return (\r\n    <Layout style={styles.container} level='1'>\r\n      <Modal visible={modalVisiblity}>\r\n        <Card disabled={true}>\r\n          {dataToModal ?\r\n            <React.Fragment>\r\n              <Text>{itemToValidate}</Text>\r\n              <Text>TODO Barva ma byt - {dataToModal[0]} </Text>\r\n              <Text>{dataToModal[1]} </Text>\r\n              {/* <Text>Barva ma byt {dataToModal[0]} </Text> */}\r\n            </React.Fragment>\r\n            :\r\n            <Text>Loading</Text>\r\n          }\r\n          <Button onPress={() => {\r\n            setModalVisiblity(false);\r\n            setScanned(false);\r\n          }}>\r\n            CLOSE\r\n          </Button>\r\n        </Card>\r\n      </Modal>\r\n\r\n    </Layout>\r\n  );\r\n}\r\n\r\n// {scanned && <Button title={'Tap to Scan Again'} onPress={() => setScanned(false)} />}\r\nconst opacity = 'rgba(0, 0, 0, .4)';\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    position: 'absolute'\r\n  },\r\n  camera: {\r\n    flex: 1,\r\n    width: '100%',\r\n    flexDirection: 'column'\r\n  },\r\n  layerTop: {\r\n    flex: 2,\r\n    backgroundColor: opacity\r\n  },\r\n  layerCenter: {\r\n    flex: 3,\r\n    flexDirection: 'row'\r\n  },\r\n  layerLeft: {\r\n    flex: 1,\r\n    backgroundColor: opacity\r\n  },\r\n  focused: {\r\n    flex: 10\r\n  },\r\n  layerRight: {\r\n    flex: 1,\r\n    backgroundColor: opacity\r\n  },\r\n  layerBottom: {\r\n    flex: 2,\r\n    backgroundColor: opacity\r\n  },\r\n});\r\n","import React from 'react';\nimport { TouchableWithoutFeedback, StyleSheet } from 'react-native';\n\n//import EditScreenInfo from '../components/EditScreenInfo';\nimport { View } from '../components/Themed';\nimport QrReader from './components/QrReader';\nimport { Drawer, DrawerItem, IndexPath, Button, Layout, Input, MenuItem, OverflowMenu, Icon, BottomNavigation, BottomNavigationTab, Text, Modal, Card, Divider } from '@ui-kitten/components';\n\n//import ModalScreen from '../screens/ModalScreen';\n\nconst ticketTypes = ['Breakfast', 'Lunch', 'Dinner']\n\nexport default function QrScreen({itemToValidate, markAsUsed}) {\n  return (\n    <View style={styles.container}>\n      {/* <ListButton /> */}\n      {/* TODO  tenhle modal bude vzskakovatp o nakenovani nebo po manualni validaci\n      <MyModal /> */}\n      {/* <MyDrawer /> */}\n      <QrReader itemToValidate={itemToValidate} markAsUsed={markAsUsed}/>\n      <ManualValidation />\n\n      {/* <ScanType /> */}\n      {/* <Input\n        placeholder='Place your Text'\n      />\n      <Button onPress={() => {\n        alert(\"TODO zvalidovat\");\n      }}>\n        VALIDATE\n      </Button> */}\n      {/* <Divider /> */}\n      {/* <ManualValidation /> */}\n      {/* <BottomTicketTypeSelector/> */}\n    </View>\n  );\n}\n\nfunction MyModal(){\n  const [visible, setVisible] = React.useState(false);\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <Button onPress={() => setVisible(true)}>\n        TOGGLE MODAL\n      </Button>\n\n      <Modal visible={visible}>\n        <Card disabled={true}>\n          <Text>Welcome to UI Kitten 😻</Text>\n          <Button onPress={() => setVisible(false)}>\n            DISMISS\n          </Button>\n        </Card>\n      </Modal>\n\n    </Layout>\n  );\n}\n\nfunction MyDrawer() {\n  const [selectedIndex, setSelectedIndex] = React.useState(new IndexPath(0));\n\n  return (\n    <Drawer\n      selectedIndex={selectedIndex}\n      onSelect={index => setSelectedIndex(index)}>\n      <DrawerItem title='Users' />\n      <DrawerItem title='Orders' />\n      <DrawerItem title='Transactions' />\n      <DrawerItem title='Settings' />\n    </Drawer>\n  );\n}\n\n// function ScanType() {\n//   const [visible, setVisible] = React.useState(false);\n//   const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n//   const onItemSelect = (index) => {\n//     setSelectedIndex(index);\n//     setVisible(false);\n//   };\n\n//   const renderToggleButton = () => (\n//     <Button onPress={() => setVisible(true)}>\n//       Scan type\n//     </Button>\n//   );\n\n//   return (\n//     <Layout style={styles.container} level='1'>\n//       <OverflowMenu\n//         anchor={renderToggleButton}\n//         backdropStyle={styles.backdrop}\n//         visible={visible}\n//         selectedIndex={selectedIndex}\n//         onSelect={onItemSelect}\n//         onBackdropPress={() => setVisible(false)}>\n//         {Scan_types.map((type, index) =>\n//           <MenuItem key={index} title={type} />\n//         )}\n//       </OverflowMenu>\n//     </Layout>\n//   )\n// };\n\nfunction ListButton() {\n  const MenuIcon = (props) => (\n    <Icon {...props} name='menu' />\n  );\n\n  return (\n    <Button style={styles.button} appearance='ghost' status='basic' accessoryLeft={MenuIcon} />\n  );\n}\n\nfunction BottomTicketTypeSelector() {\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  return (\n    <BottomNavigation\n      selectedIndex={selectedIndex}\n      onSelect={index => setSelectedIndex(index)}\n      style={{}}>\n      {ticketTypes.map(item => (\n        <BottomNavigationTab title={item} />\n      )\n      )}\n    </BottomNavigation>\n  );\n}\n\nfunction ManualValidation() {\n  const [value, setValue] = React.useState('');\n\n  const clearSearchBar = () => {\n    setValue('');\n  };\n\n  const renderIcon = (props) => (\n    <TouchableWithoutFeedback onPress={clearSearchBar}>\n      <Icon {...props} name={'close-outline'} />\n    </TouchableWithoutFeedback>\n  );\n\n  return (\n    <View style={styles.searchBox}>\n      <Input\n        value={value}\n        autoCapitalize='none'\n        autoCorrect={false}\n        placeholder='Scan QR'\n        status='control'\n        size='large'\n        style={styles.searchBar}\n        clearButtonMode='while-editing'\n        accessoryRight={renderIcon}\n        onChangeText={nextValue => setValue(nextValue)}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    justifyContent: 'space-between',\n    flexDirection: 'column',\n    minHeight: 144,\n  },\n  searchBox: {\n    backgroundColor: 'transparent',\n    height: '70%',\n    justifyContent: 'flex-end'\n  },\n  searchBar: {\n    width: '100%',\n    alignSelf: 'center',\n    textAlign: 'center',\n    backgroundColor: 'rgba(80,80,80,0.5)'\n  },\n  button: {\n    alignSelf: 'flex-start',\n  },\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n});\n","import React from 'react';\nimport { Button, Divider, Input, Icon, List, ListItem, TopNavigation, TopNavigationAction } from '@ui-kitten/components';\nimport { TouchableWithoutFeedback, StyleSheet } from 'react-native';\n\nconst Tickets_data = [\n    {\n        title: 'Karel Novak',\n        description: 'TICKET ID 0001'\n    },\n    {\n        title: 'Pavel Mrazek',\n        description: 'TICKET ID 0002'\n    },\n    {\n        title: 'Filip Kladňák',\n        description: 'TICKET ID 0003'\n    }\n]\n\nconst BackIcon = (props) => (\n  <Icon {...props} name='arrow-ios-forward-outline'/>\n);\n\nfunction SearchBar() {\n  const [value, setValue] = React.useState('');\n\n  const clearSearchBar = () => {\n    setValue('');\n  };\n\n  const renderIcon = (props) => (\n    <TouchableWithoutFeedback onPress={clearSearchBar}>\n      <Icon {...props} name={'close-outline'}/>\n    </TouchableWithoutFeedback>\n  );\n\n  return (\n    <Input\n      value={value}\n      autoCapitalize='none'\n      autoCorrect={false}\n      placeholder='Search'\n      style={styles.searchBar}\n      clearButtonMode='while-editing'\n      accessoryRight={renderIcon}\n      onChangeText={nextValue => setValue(nextValue)}\n    />\n  );\n}\n\nexport default function TicketsScreen() {\n\n  const renderItemIcon = (props) => (\n    <Icon {...props} name='person'/>\n  );\n\n  const renderEditIcon = (props) => (\n    <Icon {...props} name='edit'/>\n  );\n\n  const renderItem = ({ item, index }) => (\n      <ListItem\n          key={index}\n        title={item.title}\n        description={item.description}\n        accessoryLeft={renderItemIcon}\n        accessoryRight={renderEditIcon}\n        style={styles.listItem}\n    />\n  );\n\n  const renderBackAction = () => (\n    <TopNavigationAction icon={BackIcon}/>\n  );\n\n  return (\n    <React.Fragment>\n      <TopNavigation\n        title='List of tickets'\n        accessoryRight={renderBackAction}\n      />\n      <Divider/>\n      <List\n              style={styles.list}\n              data={Tickets_data}\n              renderItem={renderItem}\n      />\n      <Divider/>\n      <SearchBar/>\n    </React.Fragment>\n  );\n};\n\nconst styles = StyleSheet.create({\n  list: {\n    width: '100%',\n    backgroundColor: '#f4f4f4',\n  },\n  listItem: {\n    backgroundColor: '#f4f4f4',\n  },\n  searchBar: {\n    backgroundColor: '#fff',\n    padding: 10,\n    color: '#000',\n    borderColor: '#aaa',\n    borderRadius: 24,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n});\n","import React from 'react';\nimport { View } from '../components/Themed';\nimport { Button, Divider, Input, Icon, List, ListItem, TopNavigation, TopNavigationAction, Layout, Card, Modal, Text } from '@ui-kitten/components';\nimport { TouchableWithoutFeedback, StyleSheet } from 'react-native';\n\nexport default function ManualValidationScreen() {\n\n    return (\n        <React.Fragment>\n            <TopNavigation\n                title='Screen for testing'\n            />\n            {/* <Input\n                placeholder='Place your Text'\n            />\n            <Button onPress={() => {\n                    alert(\"TODO zvalidovat\");\n                }}>\n                    VALIDATE\n            </Button>\n            <Divider />\n            <ManualValidation /> */}\n            <MyModal/>\n        </React.Fragment>\n    );\n};\n\nfunction MyModal(){\n    const [visible, setVisible] = React.useState(false);\n  \n    return (\n      <Layout style={styles.container} level='1'>\n  \n        <Button onPress={() => setVisible(true)}>\n          TOGGLE MODAL\n        </Button>\n  \n        <Modal visible={visible}>\n          <Card disabled={true}>\n            <Text>Welcome to UI Kitten 😻</Text>\n            <Button onPress={() => setVisible(false)}>\n              DISMISS\n            </Button>\n          </Card>\n        </Modal>\n  \n      </Layout>\n    );\n  }\n\nfunction ManualValidation() {\n    const [value, setValue] = React.useState('');\n\n    const clearSearchBar = () => {\n        setValue('');\n    };\n\n    const renderIcon = (props) => (\n        <TouchableWithoutFeedback onPress={clearSearchBar}>\n            <Icon {...props} name={'close-outline'} />\n        </TouchableWithoutFeedback>\n    );\n\n    return (\n        <View style={styles.searchBox}>\n            <Input\n                value={value}\n                autoCapitalize='none'\n                autoCorrect={false}\n                placeholder='Scan QR'\n                status='control'\n                size='large'\n                style={styles.searchBar}\n                clearButtonMode='while-editing'\n                accessoryRight={renderIcon}\n                onChangeText={nextValue => setValue(nextValue)}\n            />\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        width: '100%',\n        justifyContent: 'space-between',\n        flexDirection: 'column',\n        minHeight: 144,\n    },\n    searchBar: {\n        width: '50%',\n        alignSelf: 'center',\n        textAlign: 'center',\n        backgroundColor: 'rgba(80,80,80,0.5)'\n    },\n    searchBox: {\n        backgroundColor: 'transparent',\n        height: '70%',\n        justifyContent: 'flex-end'\n    },\n});","import React from 'react';\nimport { View } from '../components/Themed';\nimport { Button, Divider, Input, Icon, List, ListItem, TopNavigation, TopNavigationAction, Layout, Card, Modal, Text, Toggle, IndexPath, Drawer, DrawerItem } from '@ui-kitten/components';\nimport { TouchableWithoutFeedback, StyleSheet } from 'react-native';\n\nexport default function SettingsScreen({itemToValidate, setItemToValidate, setMarkAsUsed}) {\n\n    const ticket_pieces = [\n        { column: \"registration\", name: \"Registrace\" },\n        { column: \"dinner_fri\", name: \"Večeře pátek\" },\n        { column: \"breakfast_sat\", name: \"Snídaně sobota\" },\n        { column: \"lunch_sat\", name: \"Oběd sobota\" },\n        { column: \"dinner_sat\", name: \"Večeře sobota\" },\n        { column: \"breakfast_sun\", name: \"Snídaně neděle\" },\n        { column: \"snack_sun\", name: \"Balíček na cestu\" },\n    ]\n\n    const indexToColumnName = (index) => {\n        return ticket_pieces[index-1].column;\n    };\n\n\n\n    // ticket_pieces.find(o => o.column === \"registration\").name\n\n\n    // toggle\n    const [validate, setValidate] = React.useState(true);\n    const onValidateChange = (validate) => {\n        setValidate(validate);\n        setMarkAsUsed(validate);\n    };\n\n    // drawer\n    const [selectedItemIndex, setSelectedItemIndex] = React.useState(new IndexPath(0));\n\n    return (\n\n        <>\n\n            {/* <TopNavigation\n                title='Settings'\n            /> */}\n            <Toggle checked={validate} onChange={onValidateChange}>\n                {`Validate: ${validate}`}\n            </Toggle>\n            <Drawer\n                selectedIndex={selectedItemIndex}\n                onSelect={index => {\n                    setSelectedItemIndex(index);\n                    setItemToValidate(indexToColumnName(index));\n                }}>\n                {ticket_pieces.map((type, index) =>\n                    <DrawerItem key={index} title={type.name} />\n                )}\n            </Drawer>\n        </>\n    );\n};\n\nconst styles = StyleSheet.create({\n});","import React from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport QrScreen from '../screens/QrScreen';\nimport TicketsScreen from '../screens/TicketsScreen';\nimport ManualValidationScreen from '../screens/ManualValidationScreen'\nimport { IndexPath, Layout, Text, ViewPager } from '@ui-kitten/components';\nimport SettingsScreen from '../screens/SettingsScreen';\n\nexport default function ViewPagerNavigator() {\n  // index for pageviewer\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n  // is set from settings screen --- TODO vyresit aby nebylo natvrdo registration ale prvni ze seznamu\n  const [itemToValidate, setItemToValidate] = React.useState(\"registration\");\n  // bool if the ticked should be marked as used\n  const [markAsUsed, setMarkAsUsed] = React.useState(true);\n\n  return (\n    <ViewPager\n      selectedIndex={selectedIndex}\n      onSelect={index => setSelectedIndex(index)}\n      style={styles.viewpager}>\n      <Layout\n        // style={styles.tab}\n        level='1'>\n        <SettingsScreen itemToValidate={itemToValidate} setItemToValidate={setItemToValidate} setMarkAsUsed={setMarkAsUsed}/>\n      </Layout>\n      <Layout\n        style={styles.tab}\n        level='1'>\n        <QrScreen itemToValidate={itemToValidate} markAsUsed={markAsUsed}/>\n      </Layout>\n      <Layout\n        style={styles.tab}\n        level='1'>\n        <TicketsScreen />\n      </Layout>\n      <Layout\n        style={styles.tab}\n        level='1'>\n        <ManualValidationScreen />\n      </Layout>\n    </ViewPager>\n  );\n};\n\nconst styles = StyleSheet.create({\n  tab: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  viewpager: {\n    flex: 1,\n  },\n});\n","import React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport ViewPagerNavigator from './navigation';\nimport * as eva from '@eva-design/eva';\nimport { ApplicationProvider, IconRegistry } from '@ui-kitten/components';\nimport { EvaIconsPack } from '@ui-kitten/eva-icons';\nimport { StatusBar } from 'react-native';\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n    <>\n      <IconRegistry icons={EvaIconsPack} />\n      <ApplicationProvider {...eva} theme={eva.light}>\n        <SafeAreaProvider>\n          <StatusBar hidden={true} />\n          <ViewPagerNavigator />\n        </SafeAreaProvider>\n      </ApplicationProvider>\n    </>\n    );\n  }\n}\n","import { FontAwesome } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...FontAwesome.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";"],"sourceRoot":""}