{"version":3,"sources":["components/Themed.tsx","components/Database.tsx","screens/components/QrReader.tsx","screens/components/ModalTicketEditor.tsx","screens/components/ModalQrCodeGenerator.tsx","screens/TicketsScreen.tsx","screens/components/ModalTicketValidator.tsx","screens/QrScreen.tsx","screens/LoginScreen.tsx","screens/SettingsScreen.tsx","navigation/index.tsx","App.tsx","hooks/useCachedResources.ts","assets/fonts/SpaceMono-Regular.ttf","assets/images/icon.png"],"names":["ThemeContext","React","createContext","theme","toggleTheme","_isLoggedIn","_isAdmin","_allTickets","_allTicketsTypes","getTicketTypes","length","fetch","then","res","json","data","message","catch","error","alert","key","title","getListOfTickets","isAdmin","validateEntryCode","code","QrReader","itemToValidate","markAsUsed","setScanned","modalState","setModalState","scanned","handleBarCodeScanned","windowWidth","useWindowDimensions","width","cameraFitWidth","View","style","styles","container","isVisible","ScannedModal","dataToModal","BarCodeScanner","onBarCodeScanned","undefined","StyleSheet","absoluteFill","camera","marginLeft","layerTop","layerCenter","layerLeft","focused","borderCornerTopLeft","borderCorner","borderCornerTopRight","borderCornerBottomLeft","borderCornerBottomRight","layerRight","layerBottom","useTheme","ticket_pieces","modalContainer","type","modalWindow","backgroundColor","borderColor","Fragment","category","textBlack","paddingStart","find","item","spacer","alignItems","marginBottom","status","onPress","color","textAlign","paddingBottom","size","opacity","create","left","right","top","bottom","position","height","flex","flexDirection","margin","zIndex","borderTopWidth","borderLeftWidth","borderTopLeftRadius","borderRightWidth","borderTopRightRadius","borderBottomWidth","borderBottomLeftRadius","borderBottomRightRadius","justifyContent","borderWidth","borderRadius","alignSelf","marginTop","padding","ModalTicketEditor","selectedTicket","onClose","visible","Header","props","name","ID","Footer","footerContainer","footerControl","backdropStyle","backdrop","options","useState","selectedOption","setSelectedOption","checked","setChecked","selectedPage","setSelectedPage","card","header","footer","bodyContainer","textTransform","registration","balance","selectedIndex","onSelect","index","shouldLoadComponent","level","kittenUiBackground","flexGrow","value","row","map","onChange","topContainer","marginHorizontal","ModalQrCodeGenerator","modalVisiblity","setModalVisiblity","subtitle","paddingTop","fontSize","TicketsScreen","manualValidation","editorVisible","setEditorVisible","selectTicket","allTickets","searchedTickets","setSearchedTickets","qrGeneratorModalVisiblity","setQrGeneratorModalVisiblity","person","setPerson","themeContext","useContext","renderItemIcon","EditIcon","ValidateIcon","lightThemeBG","whiteBG","blackBG","content","elevation","list","renderItem","listItemTitle","description","accessoryLeft","accessoryRight","editButton","renderItemEditAndValidate","renderItemOnlyValidate","onSelectTicketShowQr","listItem","listItemWhiteBorder","ListEmptyComponent","emptyListText","SearchBar","setValue","clearSearchBar","autoCapitalize","autoCorrect","placeholder","searchBar","clearButtonMode","TouchableWithoutFeedback","onChangeText","nextValue","filter","ticket","removeDiacritics","toLowerCase","includes","str","defaultDiacriticsRemovalMap","i","replace","letters","base","ModalTicketValidator","properties","text","user","desc","setVisible","QrScreen","ticketType","markTicketAsUsed","hasPermission","setHasPermission","DrawerR","createDrawerNavigator","lightTheme","setTheme","manualValidationfromList","id","fetchAndDisplayModal","manualValidationInputFocus","setManualValidationInputFocus","manualValidationValue","setManualValidationValue","fetchUserData","getTextForModal","user_data","ticketInterest","hasOwnProperty","validateTicket","requestPermissionsAsync","getThemeStyles","light","dark","CustomDrawerContent","KeyboardAvoidingView","behavior","keyboardVerticalOffset","Navigator","initialRouteName","backBehavior","screenOptions","drawerPosition","drawerStyle","headerShown","drawerContent","Screen","component","toggle","manualValidationBox","maxLength","manualValidationInput","textStyle","manualValidationInputText","onSubmitEditing","e","nativeEvent","onFocus","onBlur","drawerLabel","swipeEdgeWidth","LoginScreen","navigation","entryCode","setEntryCode","clearEntryCode","confirmLogIn","navigate","lightThemeColor","black","white","Image","logoImg","source","require","anchor","autoFocus","input","inputText","placement","onBackdropPress","button","paddingHorizontal","paddingVertical","resizeMode","SettingsScreen","setTicketType","ticketTypes","setMarkTicketAsUsed","ScrollView","contentContainerStyle","cardBoxContent","obj","idx","cardText","indicatorStyle","icon","DrawerL","useEffect","permissionNeeded","NavigationContainer","gestureEnabled","App","isLoadingComplete","setLoadingComplete","a","async","SplashScreen","Font","FontAwesome","font","console","warn","useCachedResources","Provider","eva","StatusBar","hidden","icons","EvaIconsPack","module","exports"],"mappings":"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","file":"static/js/app.cd3ea1f1.chunk.js","sourcesContent":["/*\n *\n * Project: QrTicket mobile app\n * Date: December 2021\n * Authors: Tomas Rysavy, Filip Jerabek, Tomas Vostrejz, Petr Stehlik\n *\n */\n\n/**\n * Learn more about Light and Dark modes:\n * https://docs.expo.io/guides/color-schemes/\n */\n\nimport React from 'react';\n\nexport const ThemeContext = React.createContext({\n  theme: 'light',\n  toggleTheme: () => {},\n});\n\n/*import * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}*/\n","/*\n *\n * Project: QrTicket mobile app\n * Date: December 2021\n * Authors: Tomas Rysavy, Filip Jerabek, Tomas Vostrejz, Petr Stehlik\n *\n */\n\nlet _isLoggedIn = false;\nlet _isAdmin = false;\nlet _allTickets = [];\nlet _allTicketsTypes = [];\n\nfunction fetchAllTickets() {\n    fetch('https://sjezd-qr-ticket.herokuapp.com/get/all_tickets')\n      .then((res) => res.json())\n      .then((data) => {\n        _allTickets = data.message;\n      })\n      .catch(function (error) {\n        _allTickets = [];\n        alert('Connection to database error: ' + error);\n      });\n}\n\nfunction fetchAllTicketsTypes() {\n    fetch('https://sjezd-qr-ticket.herokuapp.com/get/all_interests') // TODO\n      .then((res) => res.json())\n      .then((data) => {\n        _allTicketsTypes = data.message;\n      })\n      .catch(function (error) {\n        _allTicketsTypes = [];\n        alert('Connection to database error: ' + error);\n      });\n}\n\nexport function getTicketTypes() {\n  if(_allTicketsTypes.length == 0) {\n    fetchAllTicketsTypes();\n  }\n\n  // TODO filter from database\n  _allTicketsTypes = [\n    { key: 'registration', title: 'Registration'}, \n    { key: 'dinner_fri', title: 'Dinner friday' },\n    { key: 'breakfast_sat', title: 'Breakfast saturday' },\n    { key: 'lunch_sat', title: 'Lunch saturday' },\n    { key: 'dinner_sat', title: 'Dinner saturday' },\n    { key: 'breakfast_sun', title: 'Breakfast sunday' },\n    { key: 'snack_sun', title: 'Snack sunday' }\n  ];\n\n  return _allTicketsTypes;\n}\n\nexport function getTicketValuesFor(ticketTypeKey: string) {\n  // TODO from database\n  switch (ticketTypeKey) {\n    case 'breakfast_sat':\n      return ['eggs', 'hotdog'];\n    case 'lunch_sat':\n      return ['meal', 'vegetable'];\n    case 'dinner_sat':\n      return ['cake', 'meal'];\n    case 'snack_sun':\n      return ['beer', 'water'];\n    default:\n      return [];\n  }\n}\n\nexport function getListOfTickets() {\n  if(_allTickets.length == 0) {\n    fetchAllTickets();\n  }\n\n  return _allTickets;\n}\n\nexport function isLoggedIn() {\n  return _isLoggedIn;\n}\n\nexport function isAdmin() {\n  return _isAdmin;\n}\n\nexport function validateEntryCode(code: string) {\n  const adminCode = '1234'; // FIXME admin code from database\n\n  if(code == '' || code == adminCode) { \n    _isLoggedIn = true;\n    _isAdmin = false;\n    if(code == adminCode) {\n      _isAdmin = true;\n    }\n  } else {\n    _isAdmin = false;\n    _isLoggedIn = false;\n  }\n\n  return isLoggedIn();\n}\n","/*\r\n *\r\n * Project: QrTicket mobile app\r\n * Date: December 2021\r\n * Authors: Tomas Rysavy, Filip Jerabek, Tomas Vostrejz, Petr Stehlik\r\n *\r\n */\r\n\r\nimport React from 'react';\r\nimport { View, StyleSheet, useWindowDimensions } from 'react-native';\r\nimport { BarCodeScanner } from 'expo-barcode-scanner';\r\nimport { Text, Button, useTheme, Spinner } from '@ui-kitten/components';\r\nimport { getTicketTypes } from '../../components/Database';\r\nimport { color } from 'react-native-reanimated';\r\nimport { Background } from '@react-navigation/elements';\r\n\r\ntype Hidden = { type: 'HIDDEN', isVisible: false };\r\ntype Loading = { type: 'LOADING', isVisible: true };\r\ntype Data = { type: 'DATA', isVisible: true, data: any[] };\r\n\r\nexport type ModalState = Hidden | Loading | Data;\r\n\r\nexport default function QrReader({\r\n  itemToValidate,\r\n  markAsUsed,\r\n  setScanned,\r\n  modalState,\r\n  setModalState,\r\n  scanned,\r\n  handleBarCodeScanned\r\n}: any) {\r\n\r\n  const windowWidth = useWindowDimensions().width;\r\n  const cameraFitWidth = windowWidth * 4 / 3;\r\n\r\n  // Render the content\r\n  return (\r\n    <View style={styles.container}>\r\n      {modalState.isVisible && <ScannedModal setModalState={setModalState}\r\n        setScanned={setScanned} itemToValidate={itemToValidate} markAsUsed={markAsUsed}\r\n        dataToModal={modalState}\r\n      />}\r\n      <BarCodeScanner\r\n        onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\r\n        style={[StyleSheet.absoluteFill, styles.camera, {width: cameraFitWidth, marginLeft: -(cameraFitWidth-windowWidth)/2}]} />\r\n      <View style={styles.container}>\r\n        <View style={styles.layerTop} />\r\n        <View style={styles.layerCenter}>\r\n          <View style={styles.layerLeft} />\r\n          <View style={styles.focused}>\r\n            <View style={[styles.borderCornerTopLeft, styles.borderCorner]} />\r\n            <View style={[styles.borderCornerTopRight, styles.borderCorner]} />\r\n            <View style={[styles.borderCornerBottomLeft, styles.borderCorner]} />\r\n            <View style={[styles.borderCornerBottomRight, styles.borderCorner]} />\r\n          </View>\r\n          <View style={styles.layerRight} />\r\n        </View>\r\n        <View style={styles.layerBottom} />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\n// Alert modal for information about scanning result\r\nfunction ScannedModal({ setModalState, setScanned, itemToValidate, markAsUsed, dataToModal }: any) {\r\n  const theme = useTheme();\r\n  const ticket_pieces = getTicketTypes();\r\n  // function ScannedModal() {\r\n  // const [modalVisiblity, setModalVisiblity] = useState(false);\r\n  // Render the content of alert modal\r\n  return (\r\n    <View style={styles.modalContainer}>\r\n      {dataToModal.type === 'DATA' &&\r\n        <View style={[styles.modalWindow, { backgroundColor: theme[`color-${dataToModal.data[0]}-200`], borderColor: theme[`color-${dataToModal.data[0]}-default`] }]}>\r\n            <React.Fragment>\r\n              <Text\r\n                category='h2'\r\n                style={[styles.title, styles.textBlack, { backgroundColor: theme[`color-${dataToModal.data[0]}-default`] }]}\r\n              >{dataToModal.data[1]}</Text>\r\n              <View style={{ paddingStart: 5 }}>\r\n                <Text category='h3' style={styles.textBlack}>{dataToModal.data[2]}</Text>\r\n                {ticket_pieces && <Text category='h5' style={styles.textBlack}>{ticket_pieces.find(item => item.key === itemToValidate)?.title} - {dataToModal.data[3]}</Text>}\r\n              </View>\r\n              <View style={[styles.spacer, { backgroundColor: theme[`color-${dataToModal.data[0]}-default`] }]}></View>\r\n            </React.Fragment>\r\n            <View style={{alignItems: 'center'}}>\r\n            <Button\r\n              style={{ marginBottom: 5, width: '60%' }}\r\n              status='primary'\r\n              onPress={() => {\r\n                setModalState({ type: 'HIDDEN', isVisible: false });\r\n                setScanned(false);\r\n              }}>\r\n              Close\r\n            </Button>\r\n          </View>\r\n        </View>\r\n      }\r\n      { dataToModal.type === 'LOADING' && \r\n        <View style={[styles.modalWindow, { backgroundColor: theme['background-basic-color-1'] }]}>\r\n          <Text category='h2' style={[styles.title, { color: theme['text-basic-color'], textAlign: 'center' }]}>Loading</Text>\r\n          <View style={{ alignItems: 'center', paddingBottom: 10 }}>\r\n            <Spinner size='giant' />\r\n          </View>\r\n        </View>\r\n      }\r\n    </View>\r\n  );\r\n}\r\n\r\n// {scanned && <Button title={'Tap to Scan Again'} onPress={() => setScanned(false)} />}\r\n\r\n// Styles\r\nconst opacity = 'rgba(0, 0, 0, .4)';\r\nconst borderCornerWidth = 7;\r\nconst borderCornerRadius = 20;\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    position: 'absolute',\r\n    backgroundColor: 'transparent',\r\n  },\r\n  camera: {\r\n    width: '100%',\r\n    height: '100%'\r\n  },\r\n  layerTop: {\r\n    flex: 2,\r\n    backgroundColor: opacity\r\n  },\r\n  layerCenter: {\r\n    flex: 3,\r\n    flexDirection: 'row'\r\n  },\r\n  layerLeft: {\r\n    flex: 1,\r\n    backgroundColor: opacity\r\n  },\r\n  focused: {\r\n    flex: 10,\r\n    margin: -borderCornerWidth,\r\n    zIndex: 10\r\n  },\r\n  layerRight: {\r\n    flex: 1,\r\n    backgroundColor: opacity\r\n  },\r\n  layerBottom: {\r\n    flex: 2,\r\n    backgroundColor: opacity\r\n  },\r\n  borderCorner: {\r\n    borderColor: '#eee',\r\n    position: 'absolute',\r\n    width: '15%',\r\n    height: '15%'\r\n  },\r\n  borderCornerTopLeft: {\r\n    borderTopWidth: borderCornerWidth,\r\n    borderLeftWidth: borderCornerWidth,\r\n    borderTopLeftRadius: borderCornerRadius,\r\n    left: 0,\r\n    top: 0\r\n  },\r\n  borderCornerTopRight: {\r\n    borderTopWidth: borderCornerWidth,\r\n    borderRightWidth: borderCornerWidth,\r\n    borderTopRightRadius: borderCornerRadius,\r\n    right: 0,\r\n    top: 0\r\n  },\r\n  borderCornerBottomLeft: {\r\n    borderBottomWidth: borderCornerWidth,\r\n    borderLeftWidth: borderCornerWidth,\r\n    borderBottomLeftRadius: borderCornerRadius,\r\n    left: 0,\r\n    bottom: 0\r\n  },\r\n  borderCornerBottomRight: {\r\n    borderBottomWidth: borderCornerWidth,\r\n    borderRightWidth: borderCornerWidth,\r\n    borderBottomRightRadius: borderCornerRadius,\r\n    right: 0,\r\n    bottom: 0\r\n  },\r\n  modalContainer: {\r\n    backgroundColor: 'rgba(255, 255, 255, 0.5)',\r\n    width: '100%', height: '100%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    position: 'absolute',\r\n    zIndex: 99,\r\n    top: 0,\r\n    left: 0\r\n  },\r\n  modalWindow: {\r\n    borderWidth: 2,\r\n    borderRadius: 5,\r\n    width: '90%'\r\n  },\r\n  spacer: {\r\n    height: 2,\r\n    width: '95%',\r\n    alignSelf: 'center',\r\n    marginBottom: 5,\r\n    marginTop: 5\r\n  },\r\n  title: {\r\n    backgroundColor: 'black',\r\n    padding: 3,\r\n    paddingStart: 10\r\n  },\r\n  textBlack: {\r\n    color: 'black',\r\n  }\r\n});\r\n","/*\n *\n * Project: QrTicket mobile app\n * Date: December 2021\n * Authors: Tomas Rysavy, Filip Jerabek, Tomas Vostrejz, Petr Stehlik\n *\n */\n\nimport React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, Text, Modal, Card, Divider, Toggle, Select, SelectItem, ViewPager, Layout, TabBar, Tab } from '@ui-kitten/components';\n\nexport default function ModalTicketEditor({ selectedTicket, onClose, visible }: any) {\n  const Header = (props: any) => (\n    <View {...props}>\n      <Text category='h3'>{selectedTicket.name}</Text>\n      <Text category='s1'>{selectedTicket.ID}</Text>\n    </View>\n  );\n\n  const Footer = (props: any) => (\n    <View {...props} style={[props.style, styles.footerContainer]}>\n      <Button\n        style={styles.footerControl}\n        size='small'\n        status='basic'\n        onPress={onClose}>\n        CANCEL\n      </Button>\n      <Button\n        style={styles.footerControl}\n        size='small'\n        status='info'\n        onPress={onClose}>\n        UPDATE\n      </Button>\n    </View>\n  );\n\n  function CardAccessoriesShowcase() {\n    const options = [\"--\", \"Meat\", \"Vege\"];\n    const [selectedOption, setSelectedOption] = React.useState(0);\n    const [checked, setChecked] = React.useState(false);\n    const [selectedPage, setSelectedPage] = React.useState(0);\n    const shouldLoadComponent = (index) => index === selectedPage;\n\n    return (\n      <Card style={styles.card} header={Header} footer={Footer}>\n        <View style={styles.bodyContainer}>\n          <Text>Registration:</Text>\n          <Text style={{ textTransform: 'capitalize' }}>{selectedTicket.registration}</Text>\n        </View>\n        <View style={[styles.bodyContainer, { marginBottom: 12 }]}>\n          <Text>Balance:</Text>\n          <Text>{selectedTicket.balance} CZK</Text>\n        </View>\n\n        <Divider />\n        <TabBar\n          selectedIndex={selectedPage}\n          onSelect={index => setSelectedPage(index)}>\n          <Tab title='Friday' />\n          <Tab title='Saturday' />\n          <Tab title='Sunday' />\n        </TabBar>\n\n        <ViewPager selectedIndex={selectedPage} shouldLoadComponent={shouldLoadComponent}>\n          <Layout level='2' style={styles.kittenUiBackground}>\n            <Divider />\n            <View style={styles.bodyContainer}>\n              <Text category='h6'>Dinner:</Text>\n              <Select\n                style={{ padding: 4, flexGrow: 1, marginLeft: 8 }}\n                value={options[selectedOption]}\n                onSelect={index => setSelectedOption(index.row)}>\n                { options.map((item, index) => (<SelectItem title={item} key={index} />)) }\n              </Select>\n            </View>\n          </Layout>\n          <Layout level='2' style={styles.kittenUiBackground}>\n            <Divider />\n            <View style={styles.bodyContainer}>\n              <Text category='h6'>Breakfast:</Text>\n              <Toggle checked={checked} onChange={setChecked} style={{ padding: 4 }} />\n            </View>\n            <Divider />\n            <View style={styles.bodyContainer}>\n              <Text category='h6'>Lunch:</Text>\n              <Select\n                style={{ padding: 4, flexGrow: 1, marginLeft: 8 }}\n                value={options[selectedOption]}\n                onSelect={index => setSelectedOption(index.row)}>\n                { options.map((item, index) => (<SelectItem title={item} key={index} />)) }\n              </Select>\n            </View>\n            <Divider />\n            <View style={styles.bodyContainer}>\n              <Text category='h6'>Dinner:</Text>\n              <Select\n                style={{ padding: 4, flexGrow: 1, marginLeft: 8 }}\n                value={options[selectedOption]}\n                onSelect={index => setSelectedOption(index.row)}>\n                { options.map((item, index) => (<SelectItem title={item} key={index} />)) }\n              </Select>\n            </View>\n          </Layout>\n          <Layout level='2' style={styles.kittenUiBackground} >\n            <Divider />\n            <View style={styles.bodyContainer}>\n              <Text category='h6'>Breakfast:</Text>\n              <Toggle checked={checked} onChange={setChecked} style={{ padding: 4 }} />\n            </View>\n            <Divider />\n            <View style={styles.bodyContainer}>\n              <Text category='h6'>Lunch:</Text>\n              <Select\n                style={{ padding: 4, flexGrow: 1, marginLeft: 8 }}\n                value={options[selectedOption]}\n                onSelect={index => setSelectedOption(index.row)}>\n                { options.map((item, index) => (<SelectItem title={item} key={index} />)) }\n              </Select>\n            </View>\n            <Divider />\n            <View style={styles.bodyContainer}>\n              <Text category='h6'>Dinner:</Text>\n              <Select\n                style={{ padding: 4, flexGrow: 1, marginLeft: 8 }}\n                value={options[selectedOption]}\n                onSelect={index => setSelectedOption(index.row)}>\n                { options.map((item, index) => (<SelectItem title={item} key={index} />)) }\n              </Select>\n            </View>\n          </Layout>\n        </ViewPager>\n      </Card>\n    );\n  }\n\n  return (\n    <Modal\n      visible={visible}\n      backdropStyle={styles.backdrop}\n      style={{ width: '90%' }}\n    >\n      <CardAccessoriesShowcase />\n    </Modal>\n  );\n}\n\n// Styles\nconst styles = StyleSheet.create({\n  kittenUiBackground: {\n    backgroundColor: 'transparent'\n  },\n  topContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  card: {\n    flex: 1,\n    padding: 2\n  },\n  footerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  footerControl: {\n    marginHorizontal: 2,\n  },\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  bodyContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  }\n});\n","/*\n *\n * Project: QrTicket mobile app\n * Date: December 2021\n * Authors: Tomas Rysavy, Filip Jerabek, Tomas Vostrejz, Petr Stehlik\n *\n */\n\nimport React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, Text, Modal, Card, Layout } from '@ui-kitten/components';\nimport QRCode from 'react-native-qrcode-svg';\n\nexport default function ModalQrCodeGenerator({ modalVisiblity, setModalVisiblity, dataToModal }: any) {\n  // function ScannedModal() {\n  // const [modalVisiblity, setModalVisiblity] = useState(false);\n  // Render the content of modal\n  return (\n    <Layout style={styles.container} level='1'>\n      <Modal visible={modalVisiblity} style={styles.modalContainer}>\n        <View style={[styles.modalWindow]}>\n          <Text style={styles.title}>\n            {dataToModal ? dataToModal.name : \"loading\"}\n          </Text>\n          <QRCode\n            value={dataToModal ? dataToModal.ID : \"loading\"}\n            size={200}\n          />\n          <Text style={styles.subtitle}>\n            {dataToModal ? dataToModal.ID : \"loading\"}\n          </Text>\n          <Button\n            style={{ marginTop: 5, width: '60%' }}\n            status='primary'\n            onPress={() => {\n              setModalVisiblity(false);\n            }}>\n            Close\n          </Button>\n        </View>\n      </Modal>\n    </Layout >\n  );\n}\n\n// Styles\nconst styles = StyleSheet.create({\n  modalWindow: {\n    paddingBottom: 10, \n    paddingTop: 10,\n    borderWidth: 2,\n    borderRadius: 5,\n    alignItems: 'center', \n    justifyContent: 'center', \n    backgroundColor: 'rgba(255, 255, 255, 1)', \n    width: '90%'\n  },\n  title: {\n    fontSize: 42,\n    textAlign: 'center',\n    paddingBottom: 5, \n    color: 'black'\n  },\n  subtitle: {\n    fontSize: 25,\n    textAlign: 'center',\n    paddingTop: 5,\n    color: 'black'\n  },\n  modalContainer: { \n    backgroundColor: 'rgba(255, 255, 255, 0.5)', \n    width: '100%', height: '100%', \n    alignItems: 'center', \n    justifyContent: 'center' \n  },\n  topContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  card: {\n    flex: 1,\n    margin: 2,\n  },\n  footerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  footerControl: {\n    marginHorizontal: 2,\n  },\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  container: {\n    flex: 0,\n    width: '100%',\n    justifyContent: 'space-between',\n    flexDirection: 'column',\n    backgroundColor: 'black'\n  }\n});\n","/*\n *\n * Project: QrTicket mobile app\n * Date: December 2021\n * Authors: Tomas Rysavy, Filip Jerabek, Tomas Vostrejz, Petr Stehlik\n *\n */\n\nimport React, {useState, useContext} from 'react';\nimport { getListOfTickets, isAdmin } from '../components/Database';\nimport { Button, Text, Divider, Input, Icon, List, ListItem, TopNavigation, useTheme } from '@ui-kitten/components';\nimport { TouchableWithoutFeedback, StyleSheet, View } from 'react-native';\nimport { ThemeContext } from '../components/Themed';\n\nimport ModalTicketEditor from './components/ModalTicketEditor';\nimport ModalQrCodeGenerator from './components/ModalQrCodeGenerator';\n\nexport default function TicketsScreen({ manualValidation }: any) {\n\n  const [editorVisible, setEditorVisible] = useState(false);\n  const [selectedTicket, selectTicket] = useState(null);\n  const allTickets = getListOfTickets();\n  const [searchedTickets, setSearchedTickets] = useState(allTickets);\n  const [qrGeneratorModalVisiblity, setQrGeneratorModalVisiblity] = useState(false);\n  const [person, setPerson] = useState(null);\n  const themeContext = useContext(ThemeContext);\n  const theme = useTheme();\n\n  // Icons\n  const renderItemIcon = (props: any) => (\n    <Icon {...props} name='person' />\n  );\n  const EditIcon = (props: any) => (\n    <Icon {...props} name='edit-outline' />\n  );\n  const ValidateIcon = (props: any) => (\n    <Icon {...props} name='person-done-outline' />\n  );\n\n  // Render the options buttons for item \n  const renderItemEditAndValidate = (props: any, item: any) => (\n    <>\n      <Button size='small' status='info' accessoryLeft={EditIcon} style={styles.editButton} onPress={() => { selectTicket(item); setEditorVisible(true); }}></Button>\n      <Button size='small' status='success' accessoryLeft={ValidateIcon} style={styles.editButton} onPress={() => { manualValidation(item.ID); }}></Button>\n    </>\n  );\n  const renderItemOnlyValidate = (props: any, item: any) => (\n    <Button size='small' status='success' accessoryLeft={ValidateIcon} style={styles.editButton} onPress={() => { manualValidation(item.ID); }}></Button>\n  );\n\n  function onSelectTicketShowQr(item: any) {\n    setPerson(item);\n    setQrGeneratorModalVisiblity(true);\n  }\n\n  // Function for getting right color scheme styles\n  function lightThemeBG() {\n    return themeContext.theme === 'light' ? styles.whiteBG : styles.blackBG;\n  };\n\n  // Render the item with person informations and options in the list\n  const renderItem = ({ item, index }: any) => (\n    <ListItem\n      key={index}\n      title={() => <Text style={styles.listItemTitle}>{item.name}</Text>}\n      description={item.ID}\n      accessoryLeft={renderItemIcon}\n      accessoryRight={(props) => isAdmin() ? renderItemEditAndValidate(props, item) : renderItemOnlyValidate(props, item)}\n      onPress={() => { selectTicket(item); onSelectTicketShowQr(item); }}\n      style={[styles.listItem, themeContext.theme === 'light' ? styles.listItemWhiteBorder : null]}\n    />\n  );\n\n  // Render the screen content\n  return (\n    <>\n      <View style={styles.content}>\n        <TopNavigation\n          style={{ elevation: 5 }}\n          title={() => <Text style={{ flex: 1, textAlign: 'center', fontSize: 25 }}>List of tickets</Text>}\n        />\n        <Divider />\n        <List\n          style={[styles.list, lightThemeBG()]}\n          data={searchedTickets}\n          renderItem={renderItem}\n          ListEmptyComponent={<Text style={styles.emptyListText}>No tickets found!</Text>}\n        />\n        {(isAdmin() && selectedTicket != null) ? <ModalTicketEditor selectedTicket={selectedTicket} onClose={() => setEditorVisible(false)} visible={editorVisible} /> : <></>}\n        <Divider />\n        <View style={[{ elevation: 5 }, lightThemeBG()]}>\n          <SearchBar setSearchedTickets={setSearchedTickets} allTickets={allTickets} />\n        </View>\n      </View>\n      <ModalQrCodeGenerator modalVisiblity={qrGeneratorModalVisiblity} setModalVisiblity={setQrGeneratorModalVisiblity} dataToModal={person} />\n    </>\n  );\n};\n\n// Search bar element constructor\nfunction SearchBar({ setSearchedTickets, allTickets }: any) {\n  const [value, setValue] = React.useState('');\n\n  const clearSearchBar = () => {\n    setValue('');\n    setSearchedTickets(allTickets);\n  };\n\n  const renderIcon = (props: any) => (\n    <TouchableWithoutFeedback onPress={clearSearchBar}>\n      <Icon {...props} name={'close-outline'} />\n    </TouchableWithoutFeedback>\n  );\n\n  const onChangeText = (nextValue: any) => {\n    setValue(nextValue);\n    if (nextValue == '') {\n      setSearchedTickets(allTickets);\n    } else {\n      setSearchedTickets(allTickets.filter(\n        // ticket => removeDiacritics(ticket.name.toLowerCase()).includes(removeDiacritics(nextValue.toLowerCase())) ||\n        (ticket: any) => removeDiacritics(ticket.name.toLowerCase()).includes(removeDiacritics(nextValue.toLowerCase())) ||\n          ticket.ID.toLowerCase().includes(nextValue.toLowerCase()))\n      );\n    }\n  };\n\n  // Render the element\n  return (\n    <Input\n      value={value}\n      autoCapitalize='none'\n      autoCorrect={false}\n      placeholder='Search'\n      style={styles.searchBar}\n      clearButtonMode='while-editing'\n      accessoryRight={renderIcon}\n      onChangeText={onChangeText}\n    />\n  );\n}\n\n// Styles\nconst styles = StyleSheet.create({\n  content: {\n    flex: 1\n  },\n  list: {\n    width: '100%',\n    padding: 15,\n    // paddingBottom: 60\n  },\n  blackBG: {\n    backgroundColor: 'black',\n  },\n  whiteBG: {\n    backgroundColor: 'white',\n  },\n  listItem: {\n    margin: 5,\n    borderRadius: 15,\n  },\n  listItemWhiteBorder: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n  },\n  listItemTitle: {\n    fontSize: 20\n  },\n  editButton: {\n    borderRadius: 12,\n    width: 15,\n    marginLeft: 5\n  },\n  emptyListText: {\n    fontSize: 40,\n    marginTop: '20%',\n    alignSelf: 'center'\n  },\n  searchBar: {\n    padding: 10,\n    color: '#000',\n    borderColor: '#aaa',\n    borderRadius: 15,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n});\n\n// Helper function for removing the diacritics from search user-text-content\nfunction removeDiacritics(str: any) {\n  var defaultDiacriticsRemovalMap = [\n    { 'base': 'a', 'letters': /[áä]/g },\n    { 'base': 'c', 'letters': /[č]/g },\n    { 'base': 'd', 'letters': /[ď]/g },\n    { 'base': 'e', 'letters': /[ěé]/g },\n    { 'base': 'i', 'letters': /[í]/g },\n    { 'base': 'l', 'letters': /[ĺľ]/g },\n    { 'base': 'n', 'letters': /[ň]/g },\n    { 'base': 'o', 'letters': /[óô]/g },\n    { 'base': 'r', 'letters': /[řŕ]/g },\n    { 'base': 's', 'letters': /[š]/g },\n    { 'base': 't', 'letters': /[ť]/g },\n    { 'base': 'u', 'letters': /[ůú]/g },\n    { 'base': 'y', 'letters': /[ý]/g },\n    { 'base': 'z', 'letters': /[ž]/g },\n  ];\n  for (var i = 0; i < defaultDiacriticsRemovalMap.length; i++) {\n    str = str.replace(defaultDiacriticsRemovalMap[i].letters, defaultDiacriticsRemovalMap[i].base);\n  }\n  return str;\n}\n","/*\n *\n * Project: QrTicket mobile app\n * Date: December 2021\n * Authors: Tomas Rysavy, Filip Jerabek, Tomas Vostrejz, Petr Stehlik\n *\n */\n\nimport React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, Text, Modal, Card } from '@ui-kitten/components';\n\nexport default function ModalTicketValidator(properties: any) {\n  const Header = (props: any) => (\n    <View {...props} style={styles.text}>\n      <Text category='h3'>{properties.user}</Text>\n      <Text category='s1'>{properties.desc}</Text>\n    </View>\n  );\n\n  const Footer = (props: any) => (\n    <View {...props} style={[props.style, styles.footerContainer]}>\n      <Button\n        style={styles.footerControl}\n        size='small'\n        status='basic'\n        onPress={() => properties.setVisible(false)}>\n        CANCEL\n      </Button>\n      <Button\n        style={styles.footerControl}\n        size='small'\n        onPress={() => properties.setVisible(false)}>\n        UPDATE\n      </Button>\n    </View>\n  );\n\n  function CardAccessoriesShowcase() {\n    return (\n      <Card style={styles.card} header={Header} footer={Footer}>\n        <Text>\n          The Text\n        </Text>\n      </Card>\n    );\n  }\n\n  return (\n    <Modal\n      visible={properties.visible}\n      backdropStyle={styles.backdrop}>\n      <CardAccessoriesShowcase />\n    </Modal>\n  );\n}\n\n// Styles\nconst styles = StyleSheet.create({\n  text: {\n    color: 'black'\n  },\n  topContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  card: {\n    flex: 1,\n    margin: 2\n  },\n  footerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  footerControl: {\n    marginHorizontal: 2,\n  },\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  }\n});\n","/*\n *\n * Project: QrTicket mobile app\n * Date: December 2021\n * Authors: Tomas Rysavy, Filip Jerabek, Tomas Vostrejz, Petr Stehlik\n *\n */\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { StyleSheet, useWindowDimensions, KeyboardAvoidingView, View, Alert } from 'react-native';\nimport QrReader, { ModalState } from './components/QrReader';\nimport { Text, Input, Spinner, Button } from '@ui-kitten/components';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport TicketsScreen from '../screens/TicketsScreen';\nimport ModalTicketValidator from './components/ModalTicketValidator';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport Switch from 'expo-dark-mode-switch';\nimport { ThemeContext } from '../components/Themed';\n\ntype Granted = { type: 'GRANTED' };\ntype Denied = { type: 'DENIED' };\ntype Loading = { type: 'LOADING' };\n\nexport type CameraState = Granted | Denied | Loading;\n\nexport default function QrScreen({ ticketType, markTicketAsUsed, hasPermission, setHasPermission }: any) {\n  const DrawerR = createDrawerNavigator();\n  const windowWidth = useWindowDimensions().width;\n  const themeContext = useContext(ThemeContext);\n  const [lightTheme, setTheme] = useState(themeContext.theme === 'dark');\n\n  const manualValidationfromList = (id: string) => {\n    fetchAndDisplayModal(id);\n  }\n\n  // ######################################################\n  // FROM QrReader.tsx\n  // ######################################################\n  const [scanned, setScanned] = useState(false);\n  // data shown in modal\n  const [modalState, setModalState] = useState<ModalState>({ type: 'HIDDEN', isVisible: false });\n\n  const itemToValidate = ticketType.key;\n  const [manualValidationInputFocus, setManualValidationInputFocus] = useState('80%');\n  const [manualValidationValue, setManualValidationValue] = useState('');\n\n  // handler when barcode is scanned\n  const handleBarCodeScanned = ({ type, data }: any) => {\n    setModalState({ type: 'LOADING', isVisible: true });\n    fetchAndDisplayModal(data);\n  };\n\n  // handler when bacrode is scanned\n  const fetchAndDisplayModal = (data: string) => {\n    setScanned(true);\n    fetchUserData(data);\n    // alert(`Bar code with type ${type} and data ${data} has been scanned! Chosen ${itemToValidate} doslo zpet ${JSON.stringify(responseToModal)}`);\n  };\n\n  // fetch all data about one user - user ID is data scanned from QR code\n  const fetchUserData = (user: any) => {\n    fetch(`https://sjezd-qr-ticket.herokuapp.com/get/${user}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setModalState({ type: 'DATA', isVisible: true, data: getTextForModal(data.message[0], itemToValidate) });\n      })\n      .catch(function (error) {\n        alert(\"ERROR: Chyba připojení k databázi při načítání vstupenky.\" + error);\n        setModalState({ type: 'HIDDEN', isVisible: false });\n      });\n    // .then(data => console.log(data));\n  };\n\n  function getTextForModal(user_data: any, ticketInterest: any) {\n    let res = validateTicket(user_data, ticketInterest);\n\n    switch (res) {\n      case 'used':\n        return [\"warning\", \"Ticket has been already used!\", user_data?.name, user_data[ticketInterest]]\n      case 'ok':\n        return [\"success\", \"Ticket checked\", user_data?.name, user_data[ticketInterest]]\n      case 'not':\n        return [\"info\", \"Not purchased!\", user_data?.name, user_data[ticketInterest]]\n      default:\n        return [\"danger\", \"Error\", user_data?.name, user_data[ticketInterest]]\n    }\n  }\n\n  // function gets object from server and checks if the required ticket is valid/used...\n  function validateTicket(user_data: any, ticketInterest: any) {\n    if (!user_data) {\n      return \"error\";\n    } else if (user_data && user_data.hasOwnProperty(\"timestamp_\" + ticketInterest) && user_data[\"timestamp_\" + ticketInterest] !== null) {\n      return \"used\";\n    } else if (user_data && user_data.hasOwnProperty(ticketInterest) && [\"true\", \"all\", \"sobota\", \"maso\", \"bezmaso\"].includes(user_data[ticketInterest])) {\n      { // if (dataToModal) {\n        //TODO fetch na oznaceni vstupenky\n        //}\n        return \"ok\";\n      }\n    } else if (user_data && user_data.hasOwnProperty(ticketInterest) && [null, \"\", false].includes(user_data[ticketInterest])) {\n      return \"not\";\n    } else {\n      return \"error\";\n    }\n  }\n\n  // ######################################################\n\n  // Camera permission alert\n  if (hasPermission.type === 'DENIED') {\n    return (\n      <View style={{ height: '100%', justifyContent: 'center' }}>\n        <Text category='h4' style={{ textAlign: 'center' }}>Please allow Camera</Text>\n        <Button onPress={() => {\n          BarCodeScanner.requestPermissionsAsync().then(({ status }) => {\n            setHasPermission(status === 'granted' ? { type: 'GRANTED' } : { type: 'DENIED' });\n          });\n        }}>Done</Button>\n      </View>\n    );\n  } else if (hasPermission.type === 'LOADING') {\n    return (\n      <View style={{ flex: 1, height: '100%', justifyContent: 'center', alignItems: 'center' }}>\n        <Spinner size='giant' />\n      </View>\n    );\n  }\n\n  // Clear manual validation input\n  const clearManualValidationInput = () => {\n    setManualValidationValue('');\n  };\n\n  function setValueAndValidate(nextValue: string) {\n    setManualValidationValue(nextValue);\n    // if (nextValue.length === 6) {\n    //   fetchAndDisplayModal(nextValue);\n    // }\n  }\n\n  function toggleTheme(theme) {\n    setTheme(theme);\n    themeContext.toggleTheme();\n  }\n\n  // Function for getting right color scheme styles\n  function getThemeStyles() {\n    return themeContext.theme === 'light' ? styles.light : styles.dark;\n  };\n\n  // Render the screen content\n  const Content = () => (\n    <View style={[styles.container, getThemeStyles()]}>\n      <Text style={[styles.title, getThemeStyles()]}>{ticketType.title}</Text>\n      <Switch style={styles.toggle} value={lightTheme} onChange={theme => toggleTheme(theme)} />\n      <QrReader\n        itemToValidate={ticketType.key}\n        markAsUsed={markTicketAsUsed}\n        setScanned={setScanned}\n        modalState={modalState}\n        setModalState={setModalState}\n        scanned={scanned}\n        handleBarCodeScanned={handleBarCodeScanned}\n      />\n\n      {/* Manual Validation */}\n      <View style={[styles.manualValidationBox, {height: manualValidationInputFocus}]}>\n        <Input\n          value={manualValidationValue}\n          autoCapitalize='characters'\n          autoCorrect={false}\n          placeholder='or Type QR code'\n          status='control'\n          size='large'\n          maxLength={10}\n          style={styles.manualValidationInput}\n          textStyle={styles.manualValidationInputText}\n          // onFocus={clearManualValidationInput}\n          onChangeText={nextValue => setManualValidationValue(nextValue)}\n          onSubmitEditing={e => fetchAndDisplayModal(e.nativeEvent.text)}\n          onFocus={() => (setManualValidationInputFocus('70%'))}\n          onBlur={() => (setManualValidationInputFocus('80%'))}\n        />\n      </View>\n\n      <ModalTicketValidator />\n    </View>\n  )\n\n  // Right drawer content\n  function CustomDrawerContent(props: any) {\n    return (\n      <KeyboardAvoidingView style={{ flex: 1 }} behavior='height' keyboardVerticalOffset={40}>\n        <TicketsScreen manualValidation={manualValidationfromList} />\n      </KeyboardAvoidingView>\n    );\n  }\n\n  // Render the screen with list of people in right drawer\n  return (\n    <DrawerR.Navigator initialRouteName='QRScreen' backBehavior='initialRoute' screenOptions={{ drawerPosition: 'right', drawerStyle: { width: '90%', backgroundColor: 'black' }, headerShown: false }} drawerContent={(props) => <CustomDrawerContent {...props} />}>\n      <DrawerR.Screen\n        name='QRScreen'\n        component={Content}\n        options={{ drawerLabel: 'QRScreen', swipeEdgeWidth: windowWidth / 2 }}\n      />\n    </DrawerR.Navigator>\n  );\n}\n\n// Styles\nconst styles = StyleSheet.create({\n  title: {\n    position: 'absolute',\n    top: 0,\n    zIndex: 100,\n    fontSize: 30,\n    width: '100%',\n    textAlign: 'center',\n    padding: 7,\n  },\n  dark: {\n    color: 'white',\n    backgroundColor: '#222B45',\n  },\n  light: {\n    color: 'black',\n    backgroundColor: 'white',\n  },\n  toggle: {\n    position: 'absolute',\n    right: 10,\n    top: 5,\n    zIndex: 110,\n    padding: 7,\n  },\n  container: {\n    flex: 1,\n    width: '100%',\n    justifyContent: 'space-between',\n    flexDirection: 'column',\n    backgroundColor: 'black'\n  },\n  manualValidationBox: {\n    backgroundColor: 'transparent',\n    height: '80%',\n    justifyContent: 'flex-end'\n  },\n  manualValidationInput: {\n    width: '50%',\n    alignSelf: 'center',\n    backgroundColor: 'rgba(80,80,80,0.5)'\n  },\n  manualValidationInputText: {\n    textAlign: 'center',\n  }\n});\n","/*\n *\n * Project: QrTicket mobile app\n * Date: December 2021\n * Authors: Tomas Rysavy, Filip Jerabek, Tomas Vostrejz, Petr Stehlik\n *\n */\n\nimport React, {useState, useContext}  from 'react';\nimport { StyleSheet, View, Image } from 'react-native';\nimport { Button, Text, Input, Tooltip } from '@ui-kitten/components';\nimport { validateEntryCode } from '../components/Database';\nimport { whileStatement } from '@babel/types';\nimport { ThemeContext } from '../components/Themed';\n\nexport default function LoginScreen({ navigation }) {\n  const [visible, setVisible] = useState(false);\n  const [entryCode, setEntryCode] = useState('');\n  const themeContext = useContext(ThemeContext);\n\n  function clearEntryCode() {\n    setEntryCode('');\n  };\n\n  function confirmLogIn() {\n    if(validateEntryCode(entryCode)) {\n      clearEntryCode();\n      setVisible(false);\n      navigation.navigate('QrScreen');\n    } else\n      setVisible(true);\n  }\n\n  // Input for password entry\n  const renderEntryInput = () => (\n    <Input\n      placeholder='Entry code'\n      value={entryCode}\n      autoCapitalize='characters'\n      autoFocus={true}\n      autoCorrect={false}\n      status='info'\n      maxLength={10}\n      size='large'\n      style={[styles.input, lightThemeBG()]}\n      textStyle={[styles.inputText, lightThemeColor()]}\n      onFocus={clearEntryCode}\n      onChangeText={nextValue => setEntryCode(nextValue)}\n      onSubmitEditing={confirmLogIn} />\n  );\n\n  // Function for getting right color scheme styles\n  function lightThemeBG() {\n    return themeContext.theme === 'light' ? styles.whiteBG : styles.blackBG;\n  };\n  function lightThemeColor() {\n    return themeContext.theme === 'light' ? styles.black : styles.white;\n  };\n\n  // Render the screen content\n  return (\n        <View style={[styles.container, lightThemeBG()]}>\n          <View>\n            <Image style={styles.logoImg} source={require('../assets/images/icon.png')}/>\n            <Text style={[styles.title, lightThemeColor()]}>\n              QR Ticket\n            </Text>\n          </View>\n          <View>\n            <Tooltip\n              anchor={renderEntryInput}\n              visible={visible}\n              placement='top'\n              onBackdropPress={() => setVisible(false)}>\n              Bad entry code!\n            </Tooltip>\n          </View>\n          <View>\n            <Button style={styles.button} size='large' status='info' onPress={() => confirmLogIn()}>LOG IN</Button>\n          </View>\n        </View>\n  );\n}\n\n// Styles\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 100,\n    justifyContent: 'center',\n    flex: 1,\n  },\n  blackBG: {\n    backgroundColor: 'black',\n  },\n  whiteBG: {\n    backgroundColor: 'white',\n  },\n  black: {\n    color: 'black'\n  },\n  white: {\n    color: 'white'\n  },\n  title: {\n    fontSize: 42,\n    textAlign: 'center', \n  },\n  input: {\n    borderRadius: 40,\n    textAlign: 'center'\n  },\n  inputText: {\n    textAlign: 'center',\n    fontSize: 20,\n    paddingVertical: 7,\n  },\n  logoImg: {\n    alignSelf: 'center',\n    width: '70%',\n    height: '45%',\n    borderRadius: 100,\n    resizeMode: 'contain'\n  },\n  button: {\n    marginTop: 20,\n    marginBottom: '50%',\n    paddingVertical: 17,\n    borderRadius: 40\n  }\n});\n","/*\n *\n * Project: QrTicket mobile app\n * Date: December 2021\n * Authors: Tomas Rysavy, Filip Jerabek, Tomas Vostrejz, Petr Stehlik\n *\n */\n\nimport React, {useContext} from 'react';\nimport { BottomNavigation, BottomNavigationTab, Icon, Text, Divider, TopNavigation, Card, useTheme, Button } from '@ui-kitten/components';\nimport { ScrollView, StyleSheet, View } from 'react-native';\nimport { ThemeContext } from '../components/Themed';\n\nexport interface TicketType {\n  key: string,\n  title: string\n}\n\nexport default function SettingsScreen({ticketType, markTicketAsUsed, setTicketType, setMarkTicketAsUsed, ticketTypes}: any) {\n\n  const ValidateIcon = (props: any) => (\n    <Icon {...props} name='eye-outline'/>\n  );\n\n  const CheckInIcon = (props: any) => (\n    <Icon {...props} name='checkmark-circle-2-outline'/>\n  );\n\n  const theme = useTheme();\n  const themeContext = useContext(ThemeContext);\n\n  // Function for getting right color scheme styles\n  function lightThemeBG() {\n    return themeContext.theme === 'light' ? styles.whiteBG : styles.blackBG;\n  };\n\n  // Render the screen content\n  return (\n        <View style={[styles.container, lightThemeBG()]}>\n            <TopNavigation\n                style={{ elevation: 5 }}\n                title={() => <Text style={{flex: 1, textAlign: 'center', fontSize: 25 }}>Choose ticket type to scan</Text>}\n            />\n            <Divider />\n            <ScrollView contentContainerStyle={[styles.cardBoxContent, lightThemeBG()]}>\n            {ticketTypes.map((obj: TicketType, idx: number) =>\n              <Card key={obj.key} style={[ styles.card, (ticketType.key === obj.key) && { backgroundColor: theme['color-primary-default'] } ]} onPress={() => { setTicketType(obj); }}>\n                <Text style={[ styles.cardText, (ticketType.key === obj.key) && { color: 'white' } ]}>{obj.title}</Text>\n              </Card>\n            )}\n            </ScrollView>\n            <Divider />\n            <BottomNavigation\n              selectedIndex={markTicketAsUsed}\n              onSelect={setTicketType}\n              indicatorStyle={{ backgroundColor: theme['color-primary-200'], height: '130%' }}\n              style={{ elevation: 5 }}\n            >\n              <BottomNavigationTab title='Only validate' icon={ValidateIcon}/>\n              <BottomNavigationTab title='Also mark as used' icon={CheckInIcon}/>\n            </BottomNavigation>\n        </View>\n  );\n};\n\n// Styles\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    justifyContent: 'center',\n  },\n  blackBG: {\n    backgroundColor: 'black',\n  },\n  whiteBG: {\n    backgroundColor: 'white',\n  },\n  cardBoxContent: {\n    justifyContent: 'center',\n    flex: 1,\n    width: '100%',\n  },\n  cardText: {\n    textAlign: 'center',\n    fontSize: 25\n  },\n  card: {\n    width: '90%',\n    margin: 10,\n    justifyContent: 'center',\n    alignSelf: 'center',\n    borderRadius: 15\n  }\n});\n","/*\n *\n * Project: QrTicket mobile app\n * Date: December 2021\n * Authors: Tomas Rysavy, Filip Jerabek, Tomas Vostrejz, Petr Stehlik\n *\n */\n\nimport React, { useEffect, useState } from 'react';\nimport QrScreen, { CameraState } from '../screens/QrScreen';\nimport LoginScreen from '../screens/LoginScreen';\nimport SettingsScreen from '../screens/SettingsScreen';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { useWindowDimensions, View } from 'react-native';\nimport { getTicketTypes } from '../components/Database';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\n\nexport default function Navigator() {\n  const DrawerL = createDrawerNavigator();\n  const windowWidth = useWindowDimensions().width;\n\n  const ticketTypes = getTicketTypes();\n  const [ticketType, setTicketType] = React.useState(ticketTypes[0]);\n  const [markTicketAsUsed, setMarkTicketAsUsed] = React.useState(0);\n  const [hasPermission, setHasPermission] = useState<CameraState>({ type: 'LOADING' });\n\n  // Getting the camera permission\n  useEffect(() => {\n    let permissionNeeded = true;\n\n    BarCodeScanner.requestPermissionsAsync().then(({ status }) => {\n      if (permissionNeeded) setHasPermission(status === 'granted' ? { type: 'GRANTED' } : { type: 'DENIED' });\n    });\n\n    return () => { permissionNeeded = false };\n  }, []);\n\n  // Scanning screen content\n  const QrScreenContent = () => (\n    <QrScreen ticketType={ticketType} markTicketAsUsed={markTicketAsUsed} hasPermission={hasPermission} setHasPermission={setHasPermission} />\n  )\n\n  // Left drawer content\n  const Settings = () => (\n    <SettingsScreen ticketType={ticketType} markTicketAsUsed={markTicketAsUsed} setTicketType={setTicketType} setMarkTicketAsUsed={setMarkTicketAsUsed} ticketTypes={ticketTypes}/>\n  )\n\n  // Make the left drawer and login/scanning screen navigation\n  return (\n  //  onStateChange={(state) => console.log('New state is', state)}\n  <NavigationContainer>\n    <DrawerL.Navigator initialRouteName='LoginScreen' backBehavior='initialRoute' drawerContent={Settings} screenOptions={{ drawerPosition: 'left', drawerStyle: { width: '90%' }, headerShown: false}}>\n      <DrawerL.Screen\n        name='LoginScreen'\n        component={LoginScreen}\n        options={{ drawerLabel: 'LoginScreen', swipeEdgeWidth: 0, gestureEnabled: false }}\n      />\n      <DrawerL.Screen\n        name='QrScreen'\n        component={QrScreenContent}\n        options={{ drawerLabel: 'QrScreen', swipeEdgeWidth: windowWidth/2 }}\n      />\n    </DrawerL.Navigator>\n  </NavigationContainer>\n  );\n}\n","/*\n *\n * Project: QrTicket mobile app\n * Date: December 2021\n * Authors: Tomas Rysavy, Filip Jerabek, Tomas Vostrejz, Petr Stehlik\n *\n */\n\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport * as eva from '@eva-design/eva';\nimport { ApplicationProvider, IconRegistry } from '@ui-kitten/components';\nimport { EvaIconsPack } from '@ui-kitten/eva-icons';\nimport { StatusBar } from 'react-native';\nimport { ThemeContext } from './components/Themed';\n\nimport Navigator from './navigation/';\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n\n  const [theme, setTheme] = React.useState('dark');\n\n  const toggleTheme = () => {\n    const nextTheme = theme === 'light' ? 'dark' : 'light';\n    setTheme(nextTheme);\n  };\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n    <>\n      <ThemeContext.Provider value={{ theme, toggleTheme }}>\n        <ApplicationProvider {...eva} theme={eva[theme]}>\n          <StatusBar hidden={false} backgroundColor='gray'/>\n          <IconRegistry icons={EvaIconsPack} />\n          <SafeAreaProvider>\n            <Navigator />\n          </SafeAreaProvider>\n        </ApplicationProvider>\n      </ThemeContext.Provider>\n    </>\n    );\n  }\n}\n","/*\n *\n * Project: QrTicket mobile app\n * Date: December 2021\n * Authors: Tomas Rysavy, Filip Jerabek, Tomas Vostrejz, Petr Stehlik\n *\n */\n\nimport { FontAwesome } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...FontAwesome.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","module.exports = __webpack_public_path__ + \"static/media/icon.f7cdf9f7.png\";"],"sourceRoot":""}