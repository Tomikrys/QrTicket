{"version":3,"sources":["components/Database.tsx","screens/components/QrReader.tsx","screens/components/ModalTicketEditor.tsx","screens/components/ModalQrCodeGenerator.tsx","screens/TicketsScreen.tsx","screens/components/ModalTicketValidator.tsx","screens/QrScreen.tsx","screens/LoginScreen.tsx","screens/SettingsScreen.tsx","navigation/index.tsx","App.tsx","hooks/useCachedResources.ts","assets/fonts/SpaceMono-Regular.ttf","assets/images/icon.png"],"names":["_isLoggedIn","_isAdmin","_allTickets","_allTicketsTypes","getTicketTypes","length","fetch","then","res","json","data","message","catch","error","alert","key","title","getListOfTickets","isAdmin","validateEntryCode","code","QrReader","itemToValidate","markAsUsed","setScanned","modalState","setModalState","scanned","handleBarCodeScanned","View","style","styles","container","isVisible","ScannedModal","dataToModal","BarCodeScanner","onBarCodeScanned","undefined","StyleSheet","absoluteFill","camera","layerTop","layerCenter","layerLeft","focused","layerRight","layerBottom","theme","useTheme","ticket_pieces","modalContainer","type","modalWindow","backgroundColor","borderColor","Fragment","category","textBlack","paddingStart","find","item","spacer","alignItems","marginBottom","width","status","onPress","color","textAlign","paddingBottom","size","opacity","create","left","right","top","bottom","position","flex","flexDirection","height","justifyContent","zIndex","borderWidth","borderRadius","alignSelf","marginTop","padding","ModalTicketEditor","selectedTicket","onClose","visible","Header","props","name","ID","Footer","footerContainer","footerControl","backdropStyle","backdrop","options","React","useState","selectedOption","setSelectedOption","checked","setChecked","selectedPage","setSelectedPage","card","header","footer","bodyContainer","textTransform","registration","balance","selectedIndex","onSelect","index","shouldLoadComponent","level","kittenUiBackground","flexGrow","marginLeft","value","row","map","onChange","topContainer","marginHorizontal","ModalQrCodeGenerator","modalVisiblity","setModalVisiblity","subtitle","paddingTop","fontSize","margin","TicketsScreen","manualValidation","editorVisible","setEditorVisible","selectTicket","allTickets","searchedTickets","setSearchedTickets","qrGeneratorModalVisiblity","setQrGeneratorModalVisiblity","person","setPerson","renderItemIcon","EditIcon","ValidateIcon","elevation","list","renderItem","listItemTitle","description","accessoryLeft","accessoryRight","editButton","renderItemEditAndValidate","renderItemValidate","onSelectTicketShowQr","listItem","ListEmptyComponent","emptyListText","SearchBar","setValue","clearSearchBar","autoCapitalize","autoCorrect","placeholder","searchBar","clearButtonMode","TouchableWithoutFeedback","onChangeText","nextValue","filter","ticket","removeDiacritics","toLowerCase","includes","str","defaultDiacriticsRemovalMap","i","replace","letters","base","ModalTicketValidator","properties","text","user","desc","setVisible","QrScreen","ticketType","markTicketAsUsed","hasPermission","setHasPermission","DrawerR","createDrawerNavigator","windowWidth","useWindowDimensions","manualValidationfromList","id","fetchAndDisplayModal","manualValidationValue","setManualValidationValue","fetchUserData","getTextForModal","user_data","ticketInterest","hasOwnProperty","validateTicket","requestPermissionsAsync","CustomDrawerContent","KeyboardAvoidingView","behavior","keyboardVerticalOffset","Navigator","initialRouteName","backBehavior","screenOptions","drawerPosition","drawerStyle","headerShown","drawerContent","Screen","component","searchBox","maxLength","textStyle","searchBarText","onSubmitEditing","e","nativeEvent","drawerLabel","swipeEdgeWidth","borderBottomColor","borderBottomWidth","LoginScreen","navigation","entryCode","setEntryCode","clearEntryCode","confirmLogIn","navigate","Image","logoImg","source","require","anchor","autoFocus","input","inputText","onFocus","placement","onBackdropPress","button","paddingHorizontal","paddingVertical","resizeMode","SettingsScreen","setTicketType","ticketTypes","setMarkTicketAsUsed","ScrollView","contentContainerStyle","cardBoxContent","obj","idx","cardText","indicatorStyle","icon","DrawerL","useEffect","permissionNeeded","NavigationContainer","gestureEnabled","App","isLoadingComplete","setLoadingComplete","a","async","SplashScreen","Font","FontAwesome","font","console","warn","useCachedResources","eva","StatusBar","hidden","icons","EvaIconsPack","module","exports"],"mappings":"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","file":"static/js/app.c8587abb.chunk.js","sourcesContent":["let _isLoggedIn = false;\nlet _isAdmin = false;\nlet _allTickets = [];\nlet _allTicketsTypes = [];\n\nfunction fetchAllTickets() {\n    fetch('https://sjezd-qr-ticket.herokuapp.com/get/all_tickets')\n      .then((res) => res.json())\n      .then((data) => {\n        _allTickets = data.message;\n      })\n      .catch(function (error) {\n        _allTickets = [];\n        alert('Connection to database error: ' + error);\n      });\n}\n\nfunction fetchAllTicketsTypes() {\n    fetch('https://sjezd-qr-ticket.herokuapp.com/get/all_interests') // TODO\n      .then((res) => res.json())\n      .then((data) => {\n        _allTicketsTypes = data.message;\n      })\n      .catch(function (error) {\n        _allTicketsTypes = [];\n        alert('Connection to database error: ' + error);\n      });\n}\n\nexport function getTicketTypes() {\n  if(_allTicketsTypes.length == 0) {\n    fetchAllTicketsTypes();\n  }\n\n  // TODO filter from database\n  _allTicketsTypes = [\n    { key: 'registration', title: 'Registration'}, \n    { key: 'dinner_fri', title: 'Dinner friday' },\n    { key: 'breakfast_sat', title: 'Breakfast saturday' },\n    { key: 'lunch_sat', title: 'Lunch saturday' },\n    { key: 'dinner_sat', title: 'Dinner saturday' },\n    { key: 'breakfast_sun', title: 'Breakfast sunday' },\n    { key: 'snack_sun', title: 'Snack sunday' }\n  ];\n\n  return _allTicketsTypes;\n}\n\nexport function getTicketValuesFor(ticketTypeKey: string) {\n  // TODO from database\n  switch (ticketTypeKey) {\n    case 'breakfast_sat':\n      return ['eggs', 'hotdog'];\n    case 'lunch_sat':\n      return ['meal', 'vegetable'];\n    case 'dinner_sat':\n      return ['cake', 'meal'];\n    case 'snack_sun':\n      return ['beer', 'water'];\n    default:\n      return [];\n  }\n}\n\nexport function getListOfTickets() {\n  if(_allTickets.length == 0) {\n    fetchAllTickets();\n  }\n\n  return _allTickets;\n}\n\nexport function isLoggedIn() {\n  return _isLoggedIn;\n}\n\nexport function isAdmin() {\n  return _isAdmin;\n}\n\nexport function validateEntryCode(code: string) {\n  const adminCode = '1234'; // FIXME admin code from database\n\n  if(code == '' || code == adminCode) { \n    _isLoggedIn = true;\n    _isAdmin = false;\n    if(code == adminCode) {\n      _isAdmin = true;\n    }\n  } else {\n    _isAdmin = false;\n    _isLoggedIn = false;\n  }\n\n  return isLoggedIn();\n}\n","import React from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { BarCodeScanner } from 'expo-barcode-scanner';\r\nimport { Text, Button, useTheme, Spinner } from '@ui-kitten/components';\r\nimport { getTicketTypes } from '../../components/Database';\r\nimport { color } from 'react-native-reanimated';\r\nimport { Background } from '@react-navigation/elements';\r\n\r\ntype Hidden = { type: 'HIDDEN', isVisible: false };\r\ntype Loading = { type: 'LOADING', isVisible: true };\r\ntype Data = { type: 'DATA', isVisible: true, data: any[] };\r\n\r\nexport type ModalState = Hidden | Loading | Data;\r\n\r\nexport default function QrReader({\r\n  itemToValidate,\r\n  markAsUsed,\r\n  setScanned,\r\n  modalState,\r\n  setModalState,\r\n  scanned,\r\n  handleBarCodeScanned\r\n}: any) {\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {modalState.isVisible && <ScannedModal setModalState={setModalState}\r\n        setScanned={setScanned} itemToValidate={itemToValidate} markAsUsed={markAsUsed}\r\n        dataToModal={modalState}\r\n      />}\r\n      <BarCodeScanner\r\n        onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\r\n        style={[StyleSheet.absoluteFill, styles.camera]}>\r\n        <View style={styles.layerTop} />\r\n        <View style={styles.layerCenter}>\r\n          <View style={styles.layerLeft} />\r\n          <View style={styles.focused} />\r\n          <View style={styles.layerRight} />\r\n        </View>\r\n        <View style={styles.layerBottom} />\r\n      </BarCodeScanner>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction ScannedModal({ setModalState, setScanned, itemToValidate, markAsUsed, dataToModal }: any) {\r\n  const theme = useTheme();\r\n  const ticket_pieces = getTicketTypes();\r\n  // function ScannedModal() {\r\n  // const [modalVisiblity, setModalVisiblity] = useState(false);\r\n  return (\r\n    <View style={styles.modalContainer}>\r\n      {dataToModal.type === 'DATA' &&\r\n        <View style={[styles.modalWindow, { backgroundColor: theme[`color-${dataToModal.data[0]}-200`], borderColor: theme[`color-${dataToModal.data[0]}-default`] }]}>\r\n            <React.Fragment>\r\n              <Text\r\n                category='h2'\r\n                style={[styles.title, styles.textBlack, { backgroundColor: theme[`color-${dataToModal.data[0]}-default`] }]}\r\n              >{dataToModal.data[1]}</Text>\r\n              <View style={{ paddingStart: 5 }}>\r\n                <Text category='h3' style={styles.textBlack}>{dataToModal.data[2]}</Text>\r\n                {ticket_pieces && <Text category='h5' style={styles.textBlack}>{ticket_pieces.find(item => item.key === itemToValidate)?.title} - {dataToModal.data[3]}</Text>}\r\n              </View>\r\n              <View style={[styles.spacer, { backgroundColor: theme[`color-${dataToModal.data[0]}-default`] }]}></View>\r\n            </React.Fragment>\r\n            <View style={{alignItems: 'center'}}>\r\n            <Button\r\n              style={{ marginBottom: 5, width: '60%' }}\r\n              status='primary'\r\n              onPress={() => {\r\n                setModalState({ type: 'HIDDEN', isVisible: false });\r\n                setScanned(false);\r\n              }}>\r\n              Close\r\n            </Button>\r\n          </View>\r\n        </View>\r\n      }\r\n      { dataToModal.type === 'LOADING' && \r\n        <View style={[styles.modalWindow, { backgroundColor: theme['background-basic-color-1'] }]}>\r\n          <Text category='h2' style={[styles.title, { color: theme['text-basic-color'], textAlign: 'center' }]}>Loading</Text>\r\n          <View style={{ alignItems: 'center', paddingBottom: 10 }}>\r\n            <Spinner size='giant' />\r\n          </View>\r\n        </View>\r\n      }\r\n    </View>\r\n  );\r\n}\r\n\r\n// {scanned && <Button title={'Tap to Scan Again'} onPress={() => setScanned(false)} />}\r\nconst opacity = 'rgba(0, 0, 0, .4)';\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    position: 'absolute',\r\n    backgroundColor: 'black'\r\n  },\r\n  camera: {\r\n    flex: 1,\r\n    width: '100%',\r\n    flexDirection: 'column'\r\n  },\r\n  layerTop: {\r\n    flex: 2,\r\n    backgroundColor: opacity\r\n  },\r\n  layerCenter: {\r\n    flex: 3,\r\n    flexDirection: 'row'\r\n  },\r\n  layerLeft: {\r\n    flex: 1,\r\n    backgroundColor: opacity\r\n  },\r\n  focused: {\r\n    flex: 10\r\n  },\r\n  layerRight: {\r\n    flex: 1,\r\n    backgroundColor: opacity\r\n  },\r\n  layerBottom: {\r\n    flex: 2,\r\n    backgroundColor: opacity\r\n  },\r\n  modalContainer: {\r\n    backgroundColor: 'rgba(255, 255, 255, 0.5)',\r\n    width: '100%', height: '100%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    position: 'absolute',\r\n    zIndex: 99,\r\n    top: 0,\r\n    left: 0\r\n  },\r\n  modalWindow: {\r\n    borderWidth: 2,\r\n    borderRadius: 5,\r\n    width: '90%'\r\n  },\r\n  spacer: {\r\n    height: 2,\r\n    width: '95%',\r\n    alignSelf: 'center',\r\n    marginBottom: 5,\r\n    marginTop: 5\r\n  },\r\n  title: {\r\n    backgroundColor: 'black',\r\n    padding: 3,\r\n    paddingStart: 10\r\n  },\r\n  textBlack: {\r\n    color: 'black',\r\n  }\r\n});\r\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, Text, Modal, Card, Divider, Toggle, Select, SelectItem, ViewPager, Layout, TabBar, Tab } from '@ui-kitten/components';\n\nexport default function ModalTicketEditor({ selectedTicket, onClose, visible }: any) {\n  const Header = (props: any) => (\n    <View {...props}>\n      <Text category='h3'>{selectedTicket.name}</Text>\n      <Text category='s1'>{selectedTicket.ID}</Text>\n    </View>\n  );\n\n  const Footer = (props: any) => (\n    <View {...props} style={[props.style, styles.footerContainer]}>\n      <Button\n        style={styles.footerControl}\n        size='small'\n        status='basic'\n        onPress={onClose}>\n        CANCEL\n      </Button>\n      <Button\n        style={styles.footerControl}\n        size='small'\n        status='info'\n        onPress={onClose}>\n        UPDATE\n      </Button>\n    </View>\n  );\n\n  function CardAccessoriesShowcase() {\n    const options = [\"--\", \"Meat\", \"Vege\"];\n    const [selectedOption, setSelectedOption] = React.useState(0);\n    const [checked, setChecked] = React.useState(false);\n    const [selectedPage, setSelectedPage] = React.useState(0);\n    const shouldLoadComponent = (index) => index === selectedPage;\n\n    return (\n      <Card style={styles.card} header={Header} footer={Footer}>\n        <View style={styles.bodyContainer}>\n          <Text>Registration:</Text>\n          <Text style={{ textTransform: 'capitalize' }}>{selectedTicket.registration}</Text>\n        </View>\n        <View style={[styles.bodyContainer, { marginBottom: 12 }]}>\n          <Text>Balance:</Text>\n          <Text>{selectedTicket.balance} CZK</Text>\n        </View>\n\n        <Divider />\n        <TabBar\n          selectedIndex={selectedPage}\n          onSelect={index => setSelectedPage(index)}>\n          <Tab title='Friday' />\n          <Tab title='Saturday' />\n          <Tab title='Sunday' />\n        </TabBar>\n\n        <ViewPager selectedIndex={selectedPage} shouldLoadComponent={shouldLoadComponent}>\n          <Layout level='2' style={styles.kittenUiBackground}>\n            <Divider />\n            <View style={styles.bodyContainer}>\n              <Text category='h6'>Dinner:</Text>\n              <Select\n                style={{ padding: 4, flexGrow: 1, marginLeft: 8 }}\n                value={options[selectedOption]}\n                onSelect={index => setSelectedOption(index.row)}>\n                { options.map((item, index) => (<SelectItem title={item} key={index} />)) }\n              </Select>\n            </View>\n          </Layout>\n          <Layout level='2' style={styles.kittenUiBackground}>\n            <Divider />\n            <View style={styles.bodyContainer}>\n              <Text category='h6'>Breakfast:</Text>\n              <Toggle checked={checked} onChange={setChecked} style={{ padding: 4 }} />\n            </View>\n            <Divider />\n            <View style={styles.bodyContainer}>\n              <Text category='h6'>Lunch:</Text>\n              <Select\n                style={{ padding: 4, flexGrow: 1, marginLeft: 8 }}\n                value={options[selectedOption]}\n                onSelect={index => setSelectedOption(index.row)}>\n                { options.map((item, index) => (<SelectItem title={item} key={index} />)) }\n              </Select>\n            </View>\n            <Divider />\n            <View style={styles.bodyContainer}>\n              <Text category='h6'>Dinner:</Text>\n              <Select\n                style={{ padding: 4, flexGrow: 1, marginLeft: 8 }}\n                value={options[selectedOption]}\n                onSelect={index => setSelectedOption(index.row)}>\n                { options.map((item, index) => (<SelectItem title={item} key={index} />)) }\n              </Select>\n            </View>\n          </Layout>\n          <Layout level='2' style={styles.kittenUiBackground} >\n            <Divider />\n            <View style={styles.bodyContainer}>\n              <Text category='h6'>Breakfast:</Text>\n              <Toggle checked={checked} onChange={setChecked} style={{ padding: 4 }} />\n            </View>\n            <Divider />\n            <View style={styles.bodyContainer}>\n              <Text category='h6'>Lunch:</Text>\n              <Select\n                style={{ padding: 4, flexGrow: 1, marginLeft: 8 }}\n                value={options[selectedOption]}\n                onSelect={index => setSelectedOption(index.row)}>\n                { options.map((item, index) => (<SelectItem title={item} key={index} />)) }\n              </Select>\n            </View>\n            <Divider />\n            <View style={styles.bodyContainer}>\n              <Text category='h6'>Dinner:</Text>\n              <Select\n                style={{ padding: 4, flexGrow: 1, marginLeft: 8 }}\n                value={options[selectedOption]}\n                onSelect={index => setSelectedOption(index.row)}>\n                { options.map((item, index) => (<SelectItem title={item} key={index} />)) }\n              </Select>\n            </View>\n          </Layout>\n        </ViewPager>\n      </Card>\n    );\n  }\n\n  return (\n    <Modal\n      visible={visible}\n      backdropStyle={styles.backdrop}\n      style={{ width: '90%' }}\n    >\n      <CardAccessoriesShowcase />\n    </Modal>\n  );\n}\n\nconst styles = StyleSheet.create({\n  kittenUiBackground: {\n    backgroundColor: '#222B45'\n  },\n  topContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  card: {\n    flex: 1,\n    padding: 2\n  },\n  footerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  footerControl: {\n    marginHorizontal: 2,\n  },\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  bodyContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  }\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, Text, Modal, Card, Layout, useTheme } from '@ui-kitten/components';\nimport QRCode from 'react-native-qrcode-svg';\n\nexport default function ModalQrCodeGenerator({ modalVisiblity, setModalVisiblity, dataToModal }: any) {\n  const theme = useTheme();\n  // function ScannedModal() {\n  // const [modalVisiblity, setModalVisiblity] = useState(false);\n  return (\n    <Layout style={styles.container} level='1'>\n      <Modal visible={modalVisiblity} style={styles.modalContainer}>\n        <View style={[styles.modalWindow]}>\n          <Text style={styles.title}>\n            {dataToModal ? dataToModal.name : \"loading\"}\n          </Text>\n          <QRCode\n            value={dataToModal ? dataToModal.ID : \"loading\"}\n            size={200}\n          />\n          <Text style={styles.subtitle}>\n            {dataToModal ? dataToModal.ID : \"loading\"}\n          </Text>\n          <Button\n            style={{ marginTop: 5, width: '60%' }}\n            status='primary'\n            onPress={() => {\n              setModalVisiblity(false);\n            }}>\n            Close\n          </Button>\n        </View>\n      </Modal>\n    </Layout >\n  );\n}\n\nconst styles = StyleSheet.create({\n  modalWindow: {\n    paddingBottom: 10, \n    paddingTop: 10,\n    borderWidth: 2,\n    borderRadius: 5,\n    alignItems: 'center', \n    justifyContent: 'center', \n    backgroundColor: 'rgba(255, 255, 255, 1)', \n    width: '90%'\n  },\n  title: {\n    fontSize: 42,\n    textAlign: 'center',\n    paddingBottom: 5, \n    color: 'black'\n  },\n  subtitle: {\n    fontSize: 25,\n    textAlign: 'center',\n    paddingTop: 5,\n    color: 'black'\n  },\n  modalContainer: { \n    backgroundColor: 'rgba(255, 255, 255, 0.5)', \n    width: '100%', height: '100%', \n    alignItems: 'center', \n    justifyContent: 'center' \n  },\n  topContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  card: {\n    flex: 1,\n    margin: 2,\n  },\n  footerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  footerControl: {\n    marginHorizontal: 2,\n  },\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  container: {\n    flex: 0,\n    width: '100%',\n    justifyContent: 'space-between',\n    flexDirection: 'column',\n    backgroundColor: 'black'\n  }\n});","import React from 'react';\nimport { getListOfTickets, isAdmin } from '../components/Database';\nimport { Button, Text, Divider, Input, Icon, List, ListItem, TopNavigation } from '@ui-kitten/components';\nimport { TouchableWithoutFeedback, StyleSheet, View } from 'react-native';\n\nimport ModalTicketEditor from './components/ModalTicketEditor';\nimport ModalQrCodeGenerator from './components/ModalQrCodeGenerator';\n\nexport default function TicketsScreen({ manualValidation }: any) {\n\n  const [editorVisible, setEditorVisible] = React.useState(false);\n  const [selectedTicket, selectTicket] = React.useState(null);\n  const allTickets = getListOfTickets();\n  const [searchedTickets, setSearchedTickets] = React.useState(allTickets);\n  const [qrGeneratorModalVisiblity, setQrGeneratorModalVisiblity] = React.useState(false);\n  const [person, setPerson] = React.useState(null);\n\n  const renderItemIcon = (props: any) => (\n    <Icon {...props} name='person' />\n  );\n  const EditIcon = (props: any) => (\n    <Icon {...props} name='edit-outline' />\n  );\n\n  const ValidateIcon = (props: any) => (\n    <Icon {...props} name='person-done-outline' />\n  );\n\n\n  const renderItemEditAndValidate = (props: any, item: any) => (\n    <>\n      <Button size='small' status='info' accessoryLeft={EditIcon} style={styles.editButton} onPress={() => { selectTicket(item); setEditorVisible(true); }}></Button>\n      <Button size='small' status='success' accessoryLeft={ValidateIcon} style={styles.editButton} onPress={() => { manualValidation(item.ID); }}></Button>\n    </>\n  );\n  const renderItemValidate = (props: any, item: any) => (\n    <Button size='small' status='success' accessoryLeft={ValidateIcon} style={styles.editButton} onPress={() => { manualValidation(item.ID); }}></Button>\n  );\n\n  function onSelectTicketShowQr(item: any) {\n    setPerson(item);\n    setQrGeneratorModalVisiblity(true);\n\n  }\n\n  const renderItem = ({ item, index }: any) => (\n    <ListItem\n      key={index}\n      title={() => <Text style={styles.listItemTitle}>{item.name}</Text>}\n      description={item.ID}\n      accessoryLeft={renderItemIcon}\n      accessoryRight={(props) => isAdmin() ? renderItemEditAndValidate(props, item) : renderItemValidate(props, item)}\n      onPress={() => { selectTicket(item); onSelectTicketShowQr(item); }}\n      style={styles.listItem}\n    />\n  );\n\n  return (\n    <>\n      <View style={{\n        flex: 1,\n        backgroundColor: 'black'\n      }}>\n        <TopNavigation\n          style={{ elevation: 5 }}\n          title={() => <Text style={{ flex: 1, textAlign: 'center', fontSize: 25 }}>List of tickets</Text>}\n        />\n        <Divider />\n        <List\n          style={styles.list}\n          data={searchedTickets}\n          renderItem={renderItem}\n          ListEmptyComponent={<Text style={styles.emptyListText}>No tickets found!</Text>}\n        />\n        {(isAdmin() && selectedTicket != null) ? <ModalTicketEditor selectedTicket={selectedTicket} onClose={() => setEditorVisible(false)} visible={editorVisible} /> : <></>}\n        <Divider />\n        <View style={{ elevation: 5, backgroundColor: 'black' }}>\n          <SearchBar setSearchedTickets={setSearchedTickets} allTickets={allTickets} />\n        </View>\n      </View>\n      <ModalQrCodeGenerator modalVisiblity={qrGeneratorModalVisiblity} setModalVisiblity={setQrGeneratorModalVisiblity} dataToModal={person} />\n    </>\n  );\n};\n\nfunction SearchBar({ setSearchedTickets, allTickets }: any) {\n  const [value, setValue] = React.useState('');\n\n  const clearSearchBar = () => {\n    setValue('');\n    setSearchedTickets(allTickets);\n  };\n\n  const renderIcon = (props: any) => (\n    <TouchableWithoutFeedback onPress={clearSearchBar}>\n      <Icon {...props} name={'close-outline'} />\n    </TouchableWithoutFeedback>\n  );\n\n  const onChangeText = (nextValue: any) => {\n    setValue(nextValue);\n    if (nextValue == '') {\n      setSearchedTickets(allTickets);\n    } else {\n      setSearchedTickets(allTickets.filter(\n        // ticket => removeDiacritics(ticket.name.toLowerCase()).includes(removeDiacritics(nextValue.toLowerCase())) ||\n        (ticket: any) => removeDiacritics(ticket.name.toLowerCase()).includes(removeDiacritics(nextValue.toLowerCase())) ||\n          ticket.ID.toLowerCase().includes(nextValue.toLowerCase()))\n      );\n    }\n  };\n\n  return (\n    <Input\n      value={value}\n      autoCapitalize='none'\n      autoCorrect={false}\n      placeholder='Search'\n      style={styles.searchBar}\n      clearButtonMode='while-editing'\n      accessoryRight={renderIcon}\n      onChangeText={onChangeText}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  list: {\n    width: '100%',\n    backgroundColor: 'black',\n    padding: 15,\n    // paddingBottom: 60\n  },\n  listItem: {\n    margin: 5,\n    borderRadius: 15,\n  },\n  listItemTitle: {\n    fontSize: 20\n  },\n  editButton: {\n    borderRadius: 12,\n    width: 15,\n    marginLeft: 5\n  },\n  emptyListText: {\n    fontSize: 40,\n    marginTop: '20%',\n    alignSelf: 'center'\n  },\n  searchBar: {\n    backgroundColor: 'black',\n    padding: 10,\n    color: '#000',\n    borderColor: '#aaa',\n    borderRadius: 15,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n});\n\n\nfunction removeDiacritics(str: any) {\n  var defaultDiacriticsRemovalMap = [\n    { 'base': 'a', 'letters': /[áä]/g },\n    { 'base': 'c', 'letters': /[č]/g },\n    { 'base': 'd', 'letters': /[ď]/g },\n    { 'base': 'e', 'letters': /[ěé]/g },\n    { 'base': 'i', 'letters': /[í]/g },\n    { 'base': 'l', 'letters': /[ĺľ]/g },\n    { 'base': 'n', 'letters': /[ň]/g },\n    { 'base': 'o', 'letters': /[óô]/g },\n    { 'base': 'r', 'letters': /[řŕ]/g },\n    { 'base': 's', 'letters': /[š]/g },\n    { 'base': 't', 'letters': /[ť]/g },\n    { 'base': 'u', 'letters': /[ůú]/g },\n    { 'base': 'y', 'letters': /[ý]/g },\n    { 'base': 'z', 'letters': /[ž]/g },\n  ];\n  for (var i = 0; i < defaultDiacriticsRemovalMap.length; i++) {\n    str = str.replace(defaultDiacriticsRemovalMap[i].letters, defaultDiacriticsRemovalMap[i].base);\n  }\n  return str;\n}\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, Text, Modal, Card } from '@ui-kitten/components';\n\nexport default function ModalTicketValidator(properties: any) {\n  const Header = (props: any) => (\n    <View {...props} style={styles.text}>\n      <Text category='h3'>{properties.user}</Text>\n      <Text category='s1'>{properties.desc}</Text>\n    </View>\n  );\n\n  const Footer = (props: any) => (\n    <View {...props} style={[props.style, styles.footerContainer]}>\n      <Button\n        style={styles.footerControl}\n        size='small'\n        status='basic'\n        onPress={() => properties.setVisible(false)}>\n        CANCEL\n      </Button>\n      <Button\n        style={styles.footerControl}\n        size='small'\n        onPress={() => properties.setVisible(false)}>\n        UPDATE\n      </Button>\n    </View>\n  );\n\n  function CardAccessoriesShowcase() {\n    return (\n      <Card style={styles.card} header={Header} footer={Footer}>\n        <Text>\n          The Text\n        </Text>\n      </Card>\n    );\n  }\n\n  return (\n    <Modal\n      visible={properties.visible}\n      backdropStyle={styles.backdrop}>\n      <CardAccessoriesShowcase />\n    </Modal>\n  );\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    color: 'black'\n  },\n  topContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  card: {\n    flex: 1,\n    margin: 2\n  },\n  footerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  footerControl: {\n    marginHorizontal: 2,\n  },\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  }\n});\n","import React, { useEffect, useState } from 'react';\nimport { StyleSheet, useWindowDimensions, KeyboardAvoidingView, View, Alert } from 'react-native';\nimport QrReader, { ModalState } from './components/QrReader';\nimport { Text, Input, Spinner, Button } from '@ui-kitten/components';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport TicketsScreen from '../screens/TicketsScreen';\nimport ModalTicketValidator from './components/ModalTicketValidator';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\n\ntype Granted = { type: 'GRANTED' };\ntype Denied = { type: 'DENIED' };\ntype Loading = { type: 'LOADING' };\n\nexport type CameraState = Granted | Denied | Loading;\n\nexport default function QrScreen({ ticketType, markTicketAsUsed, hasPermission, setHasPermission }: any) {\n  const DrawerR = createDrawerNavigator();\n  const windowWidth = useWindowDimensions().width;\n\n  const manualValidationfromList = (id: string) => {\n    fetchAndDisplayModal(id);\n  }\n\n  // ######################################################\n  // FROM QrReader.tsx\n  // ######################################################\n  const [scanned, setScanned] = useState(false);\n  //data shown in modal\n  const [modalState, setModalState] = useState<ModalState>({ type: 'HIDDEN', isVisible: false });\n\n  const itemToValidate = ticketType.key;\n  const [manualValidationValue, setManualValidationValue] = React.useState('');\n\n  // handler when bacrode is scanned\n  const handleBarCodeScanned = ({ type, data }: any) => {\n    setModalState({ type: 'LOADING', isVisible: true });\n    fetchAndDisplayModal(data);\n  };\n\n  // handler when bacrode is scanned\n  const fetchAndDisplayModal = (data: string) => {\n    setScanned(true);\n    fetchUserData(data);\n    // alert(`Bar code with type ${type} and data ${data} has been scanned! Chosen ${itemToValidate} doslo zpet ${JSON.stringify(responseToModal)}`);\n  };\n\n  //fetch all data about one user - user ID is data scanned from QR code\n  const fetchUserData = (user: any) => {\n    fetch(`https://sjezd-qr-ticket.herokuapp.com/get/${user}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setModalState({ type: 'DATA', isVisible: true, data: getTextForModal(data.message[0], itemToValidate) });\n      })\n      .catch(function (error) {\n        alert(\"ERROR: Chyba připojení k databázi při načítání vstupenky.\" + error);\n        setModalState({ type: 'HIDDEN', isVisible: false });\n      });\n    // .then(data => console.log(data));\n  };\n\n  function getTextForModal(user_data: any, ticketInterest: any) {\n    let res = validateTicket(user_data, ticketInterest);\n\n    switch (res) {\n      case 'used':\n        return [\"warning\", \"Ticket has been already used!\", user_data?.name, user_data[ticketInterest]]\n      case 'ok':\n        return [\"success\", \"Ticket checked\", user_data?.name, user_data[ticketInterest]]\n      case 'not':\n        return [\"info\", \"Not purchased!\", user_data?.name, user_data[ticketInterest]]\n      default:\n        return [\"danger\", \"Error\", user_data?.name, user_data[ticketInterest]]\n    }\n  }\n\n  //function gets object from server and checks if the required ticket is valid/used...\n  function validateTicket(user_data: any, ticketInterest: any) {\n    if (!user_data) {\n      return \"error\";\n    } else if (user_data && user_data.hasOwnProperty(\"timestamp_\" + ticketInterest) && user_data[\"timestamp_\" + ticketInterest] !== null) {\n      return \"used\";\n    } else if (user_data && user_data.hasOwnProperty(ticketInterest) && [\"true\", \"all\", \"sobota\", \"maso\", \"bezmaso\"].includes(user_data[ticketInterest])) {\n      { // if (dataToModal) {\n        //TODO fetch na oznaceni vstupenky\n        //}\n        return \"ok\";\n      }\n    } else if (user_data && user_data.hasOwnProperty(ticketInterest) && [null, \"\", false].includes(user_data[ticketInterest])) {\n      return \"not\";\n    } else {\n      return \"error\";\n    }\n  }\n\n  // ######################################################\n\n  if (hasPermission.type === 'DENIED') {\n    return (\n      <View style={{ height: '100%', justifyContent: 'center' }}>\n        <Text category='h4' style={{ textAlign: 'center' }}>Please allow Camera</Text>\n        <Button onPress={() => {\n          BarCodeScanner.requestPermissionsAsync().then(({ status }) => {\n            setHasPermission(status === 'granted' ? { type: 'GRANTED' } : { type: 'DENIED' });\n          });\n        }}>Done</Button>\n      </View>\n    );\n  }\n\n  if (hasPermission.type === 'LOADING') {\n    return (\n      <View style={{ flex: 1, height: '100%', justifyContent: 'center', alignItems: 'center' }}>\n        <Spinner size='giant' />\n      </View>\n    );\n  }\n\n  const clearSearchBar = () => {\n    setManualValidationValue('');\n  };\n\n  function setValueAndValidate(nextValue: string) {\n    setManualValidationValue(nextValue);\n    // if (nextValue.length === 6) {\n    //   fetchAndDisplayModal(nextValue);\n    // }\n  }\n\n  const Content = () => (\n    <View style={styles.container}>\n      <Text style={styles.title}>{ticketType.title}</Text>\n      <QrReader\n        itemToValidate={ticketType.key}\n        markAsUsed={markTicketAsUsed}\n        setScanned={setScanned}\n        modalState={modalState}\n        setModalState={setModalState}\n        scanned={scanned}\n        handleBarCodeScanned={handleBarCodeScanned}\n      />\n\n      {/* Manual Validation */}\n      <View style={styles.searchBox}>\n        <Input\n          value={manualValidationValue}\n          autoCapitalize='characters'\n          autoCorrect={false}\n          placeholder='or Type QR code'\n          status='control'\n          size='large'\n          maxLength={10}\n          style={styles.searchBar}\n          textStyle={styles.searchBarText}\n          // onFocus={clearSearchBar}\n          onChangeText={nextValue => setManualValidationValue(nextValue)}\n          onSubmitEditing={e => fetchAndDisplayModal(e.nativeEvent.text)}\n        />\n      </View>\n\n      <ModalTicketValidator />\n    </View>\n  )\n\n  function CustomDrawerContent(props: any) {\n    return (\n      <KeyboardAvoidingView style={{ flex: 1 }} behavior='height' keyboardVerticalOffset={40}>\n        <TicketsScreen manualValidation={manualValidationfromList} />\n      </KeyboardAvoidingView>\n    );\n  }\n\n  return (\n    <DrawerR.Navigator initialRouteName='QRScreen' backBehavior='initialRoute' screenOptions={{ drawerPosition: 'right', drawerStyle: { width: '90%', backgroundColor: 'black' }, headerShown: false }} drawerContent={(props) => <CustomDrawerContent {...props} />}>\n      <DrawerR.Screen\n        name='QRScreen'\n        component={Content}\n        options={{ drawerLabel: 'QRScreen', swipeEdgeWidth: windowWidth / 2 }}\n      />\n    </DrawerR.Navigator>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  title: {\n    position: 'absolute',\n    top: 0,\n    zIndex: 100,\n    fontSize: 30,\n    width: '100%',\n    textAlign: 'center',\n    padding: 7,\n    color: 'white',\n    backgroundColor: 'black',\n    borderBottomColor: 'grey',\n    borderBottomWidth: 2,\n    borderRadius: 10\n  },\n  container: {\n    flex: 1,\n    width: '100%',\n    justifyContent: 'space-between',\n    flexDirection: 'column',\n    backgroundColor: 'black'\n  },\n  searchBox: {\n    backgroundColor: 'transparent',\n    height: '80%',\n    justifyContent: 'flex-end'\n  },\n  searchBar: {\n    width: '50%',\n    alignSelf: 'center',\n    backgroundColor: 'rgba(80,80,80,0.5)'\n  },\n  searchBarText: {\n    textAlign: 'center',\n  }\n});","import React from 'react';\nimport { StyleSheet, View, Image } from 'react-native';\nimport { Button, Text, Input, Tooltip } from '@ui-kitten/components';\nimport { validateEntryCode } from '../components/Database';\nimport { whileStatement } from '@babel/types';\n\nexport default function LoginScreen({ navigation }) {\n  const [visible, setVisible] = React.useState(false);\n  const [entryCode, setEntryCode] = React.useState('');\n\n  function clearEntryCode() {\n    setEntryCode('');\n  };\n\n  function confirmLogIn() {\n    if(validateEntryCode(entryCode)) {\n      clearEntryCode();\n      setVisible(false);\n      navigation.navigate('QrScreen');\n    } else\n      setVisible(true);\n  }\n\n  const renderEntryInput = () => (\n    <Input\n      placeholder='Entry code'\n      value={entryCode}\n      autoCapitalize='characters'\n      autoFocus={true}\n      autoCorrect={false}\n      status='info'\n      maxLength={10}\n      size='large'\n      style={styles.input}\n      textStyle={styles.inputText}\n      onFocus={clearEntryCode}\n      onChangeText={nextValue => setEntryCode(nextValue)}\n      onSubmitEditing={confirmLogIn} />\n  );\n\n  return (\n        <View style={styles.container}>\n          <View>\n            <Image style={styles.logoImg} source={require('../assets/images/icon.png')}/>\n            <Text style={styles.title}>\n              QR Ticket\n            </Text>\n          </View>\n          <View>\n            <Tooltip\n              anchor={renderEntryInput}\n              visible={visible}\n              placement='top'\n              onBackdropPress={() => setVisible(false)}>\n              Bad entry code!\n            </Tooltip>\n          </View>\n          <View>\n            <Button style={styles.button} size='large' status='info' onPress={() => confirmLogIn()}>LOG IN</Button>\n          </View>\n        </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 100,\n    justifyContent: 'center',\n    flex: 1,\n    backgroundColor: 'black'\n  },\n  title: {\n    fontSize: 42,\n    textAlign: 'center', \n    color: 'white'\n  },\n  input: {\n    borderRadius: 40,\n    backgroundColor: 'black',\n    textAlign: 'center'\n  },\n  inputText: {\n    textAlign: 'center',\n    fontSize: 20,\n    paddingVertical: 7,\n    color: 'white'\n  },\n  logoImg: {\n    alignSelf: 'center',\n    width: '70%',\n    height: '45%',\n    borderRadius: 100,\n    resizeMode: 'contain'\n  },\n  button: {\n    marginTop: 20,\n    marginBottom: '50%',\n    paddingVertical: 17,\n    borderRadius: 40\n  }\n});\n","import React from 'react';\nimport { BottomNavigation, BottomNavigationTab, Icon, Text, Divider, TopNavigation, Card, useTheme, Button } from '@ui-kitten/components';\nimport { ScrollView, StyleSheet, View } from 'react-native';\n\nexport interface TicketType {\n  key: string,\n  title: string\n}\n\nexport default function SettingsScreen({ticketType, markTicketAsUsed, setTicketType, setMarkTicketAsUsed, ticketTypes}: any) {\n\n    const ValidateIcon = (props: any) => (\n      <Icon {...props} name='eye-outline'/>\n    );\n\n    const CheckInIcon = (props: any) => (\n      <Icon {...props} name='checkmark-circle-2-outline'/>\n    );\n\n    const theme = useTheme();\n    return (\n        <View style={styles.container}>\n            <TopNavigation\n                style={{ elevation: 5 }}\n                title={() => <Text style={{flex: 1, textAlign: 'center', fontSize: 25 }}>Choose ticket type to scan</Text>}\n            />\n            <Divider />\n            <ScrollView contentContainerStyle={styles.cardBoxContent}>\n            {ticketTypes.map((obj: TicketType, idx: number) =>\n              <Card key={obj.key} style={[ styles.card, (ticketType.key === obj.key) && { backgroundColor: theme['color-primary-default'] } ]} onPress={() => { setTicketType(obj); }}>\n                <Text style={[ styles.cardText, (ticketType.key === obj.key) && { color: 'white' } ]}>{obj.title}</Text>\n              </Card>\n            )}\n            </ScrollView>\n            <Divider />\n            <BottomNavigation\n              selectedIndex={markTicketAsUsed}\n              onSelect={setTicketType}\n              indicatorStyle={{ backgroundColor: theme['color-primary-200'], height: '130%' }}\n              style={{ elevation: 5 }}\n            >\n              <BottomNavigationTab title='Only validate' icon={ValidateIcon}/>\n              <BottomNavigationTab title='Also mark as used' icon={CheckInIcon}/>\n            </BottomNavigation>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    justifyContent: 'center',\n    backgroundColor: 'black'\n  },\n  cardBoxContent: {\n    justifyContent: 'center',\n    flex: 1,\n    width: '100%',\n    backgroundColor: 'black'\n  },\n  cardText: {\n    textAlign: 'center',\n    fontSize: 25\n  },\n  card: {\n    width: '90%',\n    margin: 10,\n    justifyContent: 'center',\n    alignSelf: 'center',\n    borderRadius: 15\n  }\n});\n","import React, { useEffect, useState } from 'react';\nimport QrScreen, { CameraState } from '../screens/QrScreen';\nimport LoginScreen from '../screens/LoginScreen';\nimport SettingsScreen from '../screens/SettingsScreen';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { useWindowDimensions, View } from 'react-native';\nimport { getTicketTypes } from '../components/Database';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\n\nexport default function Navigator() {\n  const DrawerL = createDrawerNavigator();\n  const windowWidth = useWindowDimensions().width;\n\n  const ticketTypes = getTicketTypes();\n  const [ticketType, setTicketType] = React.useState(ticketTypes[0]);\n  const [markTicketAsUsed, setMarkTicketAsUsed] = React.useState(0);\n  const [hasPermission, setHasPermission] = useState<CameraState>({ type: 'LOADING' });\n\n  useEffect(() => {\n    let permissionNeeded = true;\n\n    BarCodeScanner.requestPermissionsAsync().then(({ status }) => {\n      if (permissionNeeded) setHasPermission(status === 'granted' ? { type: 'GRANTED' } : { type: 'DENIED' });\n    });\n\n    return () => { permissionNeeded = false };\n  }, []);\n\n  const QrScreenContent = () => (\n    <QrScreen ticketType={ticketType} markTicketAsUsed={markTicketAsUsed} hasPermission={hasPermission} setHasPermission={setHasPermission} />\n  )\n\n  const Settings = () => (\n    <SettingsScreen ticketType={ticketType} markTicketAsUsed={markTicketAsUsed} setTicketType={setTicketType} setMarkTicketAsUsed={setMarkTicketAsUsed} ticketTypes={ticketTypes}/>\n  )\n\n  return (\n  //  onStateChange={(state) => console.log('New state is', state)}\n  <NavigationContainer>\n    <DrawerL.Navigator initialRouteName='LoginScreen' backBehavior='initialRoute' drawerContent={Settings} screenOptions={{ drawerPosition: 'left', drawerStyle: { width: '90%' }, headerShown: false}}>\n      <DrawerL.Screen\n        name='LoginScreen'\n        component={LoginScreen}\n        options={{ drawerLabel: 'LoginScreen', swipeEdgeWidth: 0, gestureEnabled: false }}\n      />\n      <DrawerL.Screen\n        name='QrScreen'\n        component={QrScreenContent}\n        options={{ drawerLabel: 'QrScreen', swipeEdgeWidth: windowWidth/2 }}\n      />\n    </DrawerL.Navigator>\n  </NavigationContainer>\n  );\n}\n","import React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport * as eva from '@eva-design/eva';\nimport { ApplicationProvider, IconRegistry } from '@ui-kitten/components';\nimport { EvaIconsPack } from '@ui-kitten/eva-icons';\nimport { StatusBar } from 'react-native';\n\nimport Navigator from './navigation/';\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n    <>\n      <ApplicationProvider {...eva} theme={eva.dark}>\n        <StatusBar hidden={false} backgroundColor='gray'/>\n        <IconRegistry icons={EvaIconsPack} />\n        <SafeAreaProvider>\n          <Navigator />\n        </SafeAreaProvider>\n      </ApplicationProvider>\n    </>\n    );\n  }\n}\n","import { FontAwesome } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...FontAwesome.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","module.exports = __webpack_public_path__ + \"static/media/icon.f7cdf9f7.png\";"],"sourceRoot":""}