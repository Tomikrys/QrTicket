{"version":3,"sources":["components/Database.tsx","screens/components/QrReader.tsx","screens/components/ModalTicketEditor.tsx","screens/components/ModalQrCodeGenerator.tsx","screens/TicketsScreen.tsx","screens/components/ModalTicketValidator.tsx","screens/QrScreen.tsx","screens/LoginScreen.tsx","screens/SettingsScreen.tsx","navigation/index.tsx","App.tsx","hooks/useCachedResources.ts","assets/fonts/SpaceMono-Regular.ttf","assets/images/icon.png"],"names":["_isLoggedIn","_isAdmin","_allTickets","_allTicketsTypes","getTicketTypes","length","fetch","then","res","json","data","message","catch","error","alert","key","title","getListOfTickets","isAdmin","validateEntryCode","code","QrReader","itemToValidate","markAsUsed","setScanned","hasPermission","modalVisiblity","setModalVisiblity","responseToModal","dataToModal","scanned","handleBarCodeScanned","View","style","styles","container","ScannedModal","BarCodeScanner","onBarCodeScanned","undefined","StyleSheet","absoluteFill","camera","layerTop","layerCenter","layerLeft","focused","layerRight","layerBottom","theme","useTheme","ticket_pieces","level","visible","modalContainer","modalWindow","backgroundColor","borderColor","Fragment","category","paddingStart","find","item","spacer","alignItems","marginBottom","width","status","onPress","opacity","create","left","right","top","bottom","position","flex","flexDirection","height","justifyContent","borderWidth","borderRadius","alignSelf","marginTop","color","padding","ModalTicketEditor","selectedTicket","onClose","Header","props","name","ID","Footer","footerContainer","footerControl","size","backdropStyle","backdrop","options","React","useState","selectedOption","setSelectedOption","checked","setChecked","selectedPage","setSelectedPage","card","header","footer","bodyContainer","textTransform","registration","balance","selectedIndex","onSelect","index","shouldLoadComponent","flexGrow","marginLeft","value","row","map","onChange","topContainer","margin","marginHorizontal","ModalQrCodeGenerator","subtitle","paddingBottom","paddingTop","fontSize","textAlign","TicketsScreen","manualValidation","editorVisible","setEditorVisible","selectTicket","allTickets","searchedTickets","setSearchedTickets","qrGeneratorModalVisiblity","setQrGeneratorModalVisiblity","person","setPerson","renderItemIcon","EditIcon","ValidateIcon","elevation","list","renderItem","listItemTitle","description","accessoryLeft","accessoryRight","editButton","renderItemEditAndValidate","renderItemValidate","onSelectTicketShowQr","listItem","ListEmptyComponent","emptyListText","SearchBar","setValue","clearSearchBar","autoCapitalize","autoCorrect","placeholder","searchBar","clearButtonMode","TouchableWithoutFeedback","onChangeText","nextValue","filter","ticket","removeDiacritics","toLowerCase","includes","str","defaultDiacriticsRemovalMap","i","replace","letters","base","ModalTicketValidator","properties","user","desc","setVisible","QrScreen","ticketType","markTicketAsUsed","type","setHasPermission","DrawerR","createDrawerNavigator","windowWidth","useWindowDimensions","manualValidationfromList","id","fetchAndDisplayModal","setResponseToModal","setDataToModal","manualValidationValue","setManualValidationValue","fetchUserData","user_data","ticketInterest","hasOwnProperty","validateTicket","getTextForModal","useEffect","permissionNeeded","requestPermissionsAsync","CustomDrawerContent","KeyboardAvoidingView","behavior","keyboardVerticalOffset","Navigator","initialRouteName","backBehavior","screenOptions","drawerPosition","drawerStyle","headerShown","drawerContent","Screen","component","zIndex","searchBox","maxLength","textStyle","searchBarText","onSubmitEditing","e","nativeEvent","text","drawerLabel","swipeEdgeWidth","LoginScreen","navigation","entryCode","setEntryCode","clearEntryCode","confirmLogIn","navigate","Image","logoImg","source","require","anchor","autoFocus","input","inputText","onFocus","placement","onBackdropPress","button","paddingHorizontal","paddingVertical","resizeMode","SettingsScreen","setTicketType","ticketTypes","setMarkTicketAsUsed","ScrollView","contentContainerStyle","cardBoxContent","obj","idx","cardText","indicatorStyle","icon","DrawerL","NavigationContainer","gestureEnabled","App","isLoadingComplete","setLoadingComplete","a","async","SplashScreen","Font","FontAwesome","font","console","warn","useCachedResources","eva","StatusBar","hidden","icons","EvaIconsPack","module","exports"],"mappings":"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","file":"static/js/app.8524848b.chunk.js","sourcesContent":["let _isLoggedIn = false;\nlet _isAdmin = false;\nlet _allTickets = [];\nlet _allTicketsTypes = [];\n\nfunction fetchAllTickets() {\n    fetch('https://sjezd-qr-ticket.herokuapp.com/get/all_tickets')\n      .then((res) => res.json())\n      .then((data) => {\n        _allTickets = data.message;\n      })\n      .catch(function (error) {\n        _allTickets = [];\n        alert('Connection to database error: ' + error);\n      });\n}\n\nfunction fetchAllTicketsTypes() {\n    fetch('https://sjezd-qr-ticket.herokuapp.com/get/all_interests') // TODO\n      .then((res) => res.json())\n      .then((data) => {\n        _allTicketsTypes = data.message;\n      })\n      .catch(function (error) {\n        _allTicketsTypes = [];\n        alert('Connection to database error: ' + error);\n      });\n}\n\nexport function getTicketTypes() {\n  if(_allTicketsTypes.length == 0) {\n    fetchAllTicketsTypes();\n  }\n\n  // TODO filter from database\n  _allTicketsTypes = [\n    { key: 'registration', title: 'Registration'}, \n    { key: 'dinner_fri', title: 'Dinner friday' },\n    { key: 'breakfast_sat', title: 'Breakfast saturday' },\n    { key: 'lunch_sat', title: 'Lunch saturday' },\n    { key: 'dinner_sat', title: 'Dinner saturday' },\n    { key: 'breakfast_sun', title: 'Breakfast sunday' },\n    { key: 'snack_sun', title: 'Snack sunday' }\n  ];\n\n  return _allTicketsTypes;\n}\n\nexport function getTicketValuesFor(ticketTypeKey: string) {\n  // TODO from database\n  switch (ticketTypeKey) {\n    case 'breakfast_sat':\n      return ['eggs', 'hotdog'];\n    case 'lunch_sat':\n      return ['meal', 'vegetable'];\n    case 'dinner_sat':\n      return ['cake', 'meal'];\n    case 'snack_sun':\n      return ['beer', 'water'];\n    default:\n      return [];\n  }\n}\n\nexport function getListOfTickets() {\n  if(_allTickets.length == 0) {\n    fetchAllTickets();\n  }\n\n  return _allTickets;\n}\n\nexport function isLoggedIn() {\n  return _isLoggedIn;\n}\n\nexport function isAdmin() {\n  return _isAdmin;\n}\n\nexport function validateEntryCode(code: string) {\n  const adminCode = '1234'; // FIXME admin code from database\n\n  if(code == '' || code == adminCode) { \n    _isLoggedIn = true;\n    _isAdmin = false;\n    if(code == adminCode) {\n      _isAdmin = true;\n    }\n  } else {\n    _isAdmin = false;\n    _isLoggedIn = false;\n  }\n\n  return isLoggedIn();\n}\n","import React, { useState } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { BarCodeScanner } from 'expo-barcode-scanner';\r\nimport { Text, Card, Layout, Modal, Button, useTheme } from '@ui-kitten/components';\r\nimport { getTicketTypes } from '../../components/Database';\r\n\r\nexport default function QrReader({\r\n  itemToValidate,\r\n  markAsUsed,\r\n  hasPermission,\r\n  setScanned,\r\n  modalVisiblity,\r\n  setModalVisiblity,\r\n  responseToModal,\r\n  dataToModal,\r\n  scanned,\r\n  handleBarCodeScanned\r\n}: any) {\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScannedModal modalVisiblity={modalVisiblity} setModalVisiblity={setModalVisiblity}\r\n        setScanned={setScanned} responseToModal={responseToModal} itemToValidate={itemToValidate} markAsUsed={markAsUsed}\r\n        dataToModal={dataToModal} />\r\n      {/* <ScannedModal /> */}\r\n      <BarCodeScanner\r\n        onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\r\n        style={[StyleSheet.absoluteFill, styles.camera]}>\r\n        <View style={styles.layerTop} />\r\n        <View style={styles.layerCenter}>\r\n          <View style={styles.layerLeft} />\r\n          <View style={styles.focused} />\r\n          <View style={styles.layerRight} />\r\n        </View>\r\n        <View style={styles.layerBottom} />\r\n      </BarCodeScanner>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction ScannedModal({ modalVisiblity, setModalVisiblity, setScanned, responseToModal, itemToValidate, markAsUsed, dataToModal }: any) {\r\n  const theme = useTheme();\r\n  const ticket_pieces = getTicketTypes();\r\n  // function ScannedModal() {\r\n  // const [modalVisiblity, setModalVisiblity] = useState(false);\r\n  return (\r\n    <Layout style={styles.container} level='1'>\r\n      <Modal visible={modalVisiblity} style={styles.modalContainer}>\r\n        <View style={[styles.modalWindow, { backgroundColor: theme[`color-${dataToModal[0]}-200`], borderColor: theme[`color-${dataToModal[0]}-default`] }]}>\r\n          {dataToModal ?\r\n            <React.Fragment>\r\n              <Text\r\n                category='h2'\r\n                style={[styles.title, { backgroundColor: theme[`color-${dataToModal[0]}-default`] }]}\r\n              >{dataToModal[1]}</Text>\r\n              <View style={{ paddingStart: 5 }}>\r\n                <Text category='h3' >{dataToModal[2]}</Text>\r\n                {ticket_pieces && <Text category='h5'>{ticket_pieces.find(item => item.key === itemToValidate)?.title} - {dataToModal[3]}</Text>}\r\n              </View>\r\n            </React.Fragment>\r\n            :\r\n            <Text>Loading</Text>\r\n          }\r\n          <View style={[styles.spacer, { backgroundColor: theme[`color-${dataToModal[0]}-default`] }]}></View>\r\n          <View style={{ alignItems: 'center' }}>\r\n            <Button\r\n              style={{ marginBottom: 5, width: '60%' }}\r\n              status='primary'\r\n              onPress={() => {\r\n                setModalVisiblity(false);\r\n                setScanned(false);\r\n              }}>\r\n              Close\r\n            </Button>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n\r\n    </Layout>\r\n  );\r\n}\r\n\r\n// {scanned && <Button title={'Tap to Scan Again'} onPress={() => setScanned(false)} />}\r\nconst opacity = 'rgba(0, 0, 0, .4)';\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    position: 'absolute'\r\n  },\r\n  camera: {\r\n    flex: 1,\r\n    width: '100%',\r\n    flexDirection: 'column'\r\n  },\r\n  layerTop: {\r\n    flex: 2,\r\n    backgroundColor: opacity\r\n  },\r\n  layerCenter: {\r\n    flex: 3,\r\n    flexDirection: 'row'\r\n  },\r\n  layerLeft: {\r\n    flex: 1,\r\n    backgroundColor: opacity\r\n  },\r\n  focused: {\r\n    flex: 10\r\n  },\r\n  layerRight: {\r\n    flex: 1,\r\n    backgroundColor: opacity\r\n  },\r\n  layerBottom: {\r\n    flex: 2,\r\n    backgroundColor: opacity\r\n  },\r\n  modalContainer: {\r\n    backgroundColor: 'rgba(255, 255, 255, 0.5)',\r\n    width: '100%', height: '100%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  modalWindow: {\r\n    borderWidth: 2,\r\n    borderRadius: 5,\r\n    width: '90%'\r\n  },\r\n  spacer: {\r\n    height: 2,\r\n    width: '95%',\r\n    alignSelf: 'center',\r\n    marginBottom: 5,\r\n    marginTop: 5\r\n  },\r\n  title: {\r\n    color: 'white',\r\n    padding: 3,\r\n    paddingStart: 10\r\n  }\r\n});\r\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, Text, Modal, Card, Divider, Toggle, Select, SelectItem, ViewPager, Layout, TabBar, Tab } from '@ui-kitten/components';\n\nexport default function ModalTicketEditor({selectedTicket, onClose, visible}: any) {\n  const Header = (props: any) => (\n    <View {...props}>\n      <Text category='h3'>{selectedTicket.name}</Text>\n      <Text category='s1'>{selectedTicket.ID}</Text>\n    </View>\n  );\n\n  const Footer = (props: any) => (\n    <View {...props} style={[props.style, styles.footerContainer]}>\n      <Button\n        style={styles.footerControl}\n        size='small'\n        status='basic'\n        onPress={onClose}>\n        CANCEL\n      </Button>\n      <Button\n        style={styles.footerControl}\n        size='small'\n        status='info'\n        onPress={onClose}>\n        UPDATE\n      </Button>\n    </View>\n  );\n\n  function CardAccessoriesShowcase() {\n    const options = [ \"--\", \"Meat\", \"Vege\" ];\n    const [selectedOption, setSelectedOption] = React.useState(0);\n    const [checked, setChecked] = React.useState(false);\n    const [selectedPage, setSelectedPage] = React.useState(0);\n    const shouldLoadComponent = (index) => index === selectedPage;\n\n    return (\n      <Card style={styles.card} header={Header} footer={Footer}>\n        <View style={ styles.bodyContainer }>\n          <Text>Registration:</Text>\n          <Text style={{ textTransform: 'capitalize' }}>{ selectedTicket.registration }</Text>\n        </View>\n        <View style={[ styles.bodyContainer, { marginBottom: 12 } ]}>\n          <Text>Balance:</Text>\n          <Text>{ selectedTicket.balance } CZK</Text>\n        </View>\n\n        <Divider />\n        <TabBar\n          selectedIndex={selectedPage}\n          onSelect={index => setSelectedPage(index)}>\n          <Tab title='Friday'/>\n          <Tab title='Saturday'/>\n          <Tab title='Sunday'/>\n        </TabBar>\n\n        <ViewPager selectedIndex={selectedPage} shouldLoadComponent={shouldLoadComponent}>\n          <Layout level='2' style={{ backgroundColor: 'white' }}>\n            <Divider />\n            <View style={ styles.bodyContainer }>\n              <Text category='h6'>Dinner:</Text>\n              <Select\n                style={{ padding: 4, flexGrow: 1, marginLeft: 8 }}\n                value={ options[selectedOption] }\n                onSelect={index => setSelectedOption(index.row)}>\n                { options.map(item => (<SelectItem title={item} />)) }\n              </Select>\n            </View>\n          </Layout>\n          <Layout level='2' style={{ backgroundColor: 'white' }}>\n          <Divider />\n            <View style={ styles.bodyContainer }>\n              <Text category='h6'>Breakfast:</Text>\n              <Toggle checked={checked} onChange={setChecked} style={{ padding: 4 }} />\n            </View>\n            <Divider />\n            <View style={ styles.bodyContainer }>\n              <Text category='h6'>Lunch:</Text>\n              <Select\n                style={{ padding: 4, flexGrow: 1, marginLeft: 8 }}\n                value={ options[selectedOption] }\n                onSelect={index => setSelectedOption(index.row)}>\n                { options.map(item => (<SelectItem title={item} />)) }\n              </Select>\n            </View>\n            <Divider />\n            <View style={ styles.bodyContainer }>\n              <Text category='h6'>Dinner:</Text>\n              <Select\n                style={{ padding: 4, flexGrow: 1, marginLeft: 8 }}\n                value={ options[selectedOption] }\n                onSelect={index => setSelectedOption(index.row)}>\n                { options.map(item => (<SelectItem title={item} />)) }\n              </Select>\n            </View>\n          </Layout>\n          <Layout level='2' style={{ backgroundColor: 'white' }}>\n          <Divider />\n            <View style={ styles.bodyContainer }>\n              <Text category='h6'>Breakfast:</Text>\n              <Toggle checked={checked} onChange={setChecked} style={{ padding: 4 }} />\n            </View>\n            <Divider />\n            <View style={ styles.bodyContainer }>\n              <Text category='h6'>Lunch:</Text>\n              <Select\n                style={{ padding: 4, flexGrow: 1, marginLeft: 8 }}\n                value={ options[selectedOption] }\n                onSelect={index => setSelectedOption(index.row)}>\n                { options.map(item => (<SelectItem title={item} />)) }\n              </Select>\n            </View>\n            <Divider />\n            <View style={ styles.bodyContainer }>\n              <Text category='h6'>Dinner:</Text>\n              <Select\n                style={{ padding: 4, flexGrow: 1, marginLeft: 8 }}\n                value={ options[selectedOption] }\n                onSelect={index => setSelectedOption(index.row)}>\n                { options.map(item => (<SelectItem title={item} />)) }\n              </Select>\n            </View>\n          </Layout>\n        </ViewPager>\n      </Card>\n    );\n  }\n\n  return (\n    <Modal\n      visible={visible}\n      backdropStyle={styles.backdrop}>\n      <CardAccessoriesShowcase />\n    </Modal>\n  );\n}\n\nconst styles = StyleSheet.create({\n  topContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  card: {\n    flex: 1,\n    margin: 2,\n  },\n  footerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  footerControl: {\n    marginHorizontal: 2,\n  },\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  bodyContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  }\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, Text, Modal, Card, Layout, useTheme } from '@ui-kitten/components';\nimport QRCode from 'react-native-qrcode-svg';\n\nexport default function ModalQrCodeGenerator({ modalVisiblity, setModalVisiblity, dataToModal }: any) {\n  const theme = useTheme();\n  // function ScannedModal() {\n  // const [modalVisiblity, setModalVisiblity] = useState(false);\n  return (\n    <Layout style={styles.container} level='1'>\n      <Modal visible={modalVisiblity} style={styles.modalContainer}>\n        <View style={[styles.modalWindow]}>\n          <Text style={styles.title}>\n            {dataToModal ? dataToModal.name : \"loading\"}\n          </Text>\n          <QRCode\n            value={dataToModal ? dataToModal.ID : \"loading\"}\n            size={200}\n          />\n          <Text style={styles.subtitle}>\n            {dataToModal ? dataToModal.ID : \"loading\"}\n          </Text>\n          <Button\n            style={{ marginTop: 5, width: '60%' }}\n            status='primary'\n            onPress={() => {\n              setModalVisiblity(false);\n            }}>\n            Close\n          </Button>\n        </View>\n      </Modal>\n    </Layout >\n  );\n}\n\nconst styles = StyleSheet.create({\n  modalWindow: {\n    paddingBottom: 10, \n    paddingTop: 10,\n    borderWidth: 2,\n    borderRadius: 5,\n    alignItems: 'center', \n    justifyContent: 'center', \n    backgroundColor: 'rgba(255, 255, 255, 1)', \n    width: '90%'\n  },\n  title: {\n    fontSize: 42,\n    textAlign: 'center',\n    paddingBottom: 5, \n  },\n  subtitle: {\n    fontSize: 25,\n    textAlign: 'center',\n    paddingTop: 5,\n  },\n  modalContainer: { \n    backgroundColor: 'rgba(255, 255, 255, 0.5)', \n    width: '100%', height: '100%', \n    alignItems: 'center', \n    justifyContent: 'center' \n  },\n  topContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  card: {\n    flex: 1,\n    margin: 2,\n  },\n  footerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  footerControl: {\n    marginHorizontal: 2,\n  },\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  container: {\n    flex: 0,\n    width: '100%',\n    justifyContent: 'space-between',\n    flexDirection: 'column',\n    backgroundColor: 'black'\n  }\n});","import React from 'react';\nimport { getListOfTickets, isAdmin } from '../components/Database';\nimport { Button, Text, Divider, Input, Icon, List, ListItem, TopNavigation } from '@ui-kitten/components';\nimport { TouchableWithoutFeedback, StyleSheet, View } from 'react-native';\n\nimport ModalTicketEditor from './components/ModalTicketEditor';\nimport ModalQrCodeGenerator from './components/ModalQrCodeGenerator';\n\nexport default function TicketsScreen({ manualValidation }: any) {\n\n  const [editorVisible, setEditorVisible] = React.useState(false);\n  const [selectedTicket, selectTicket] = React.useState(null);\n  const allTickets = getListOfTickets();\n  const [searchedTickets, setSearchedTickets] = React.useState(allTickets);\n  const [qrGeneratorModalVisiblity, setQrGeneratorModalVisiblity] = React.useState(false);\n  const [person, setPerson] = React.useState(null);\n\n  const renderItemIcon = (props: any) => (\n    <Icon {...props} name='person' />\n  );\n  const EditIcon = (props: any) => (\n    <Icon {...props} name='edit-outline' />\n  );\n\n  const ValidateIcon = (props: any) => (\n    <Icon {...props} name='person-done-outline' />\n  );\n\n\n  const renderItemEditAndValidate = (props: any, item: any) => (\n    <>\n      <Button size='small' status='info' accessoryLeft={EditIcon} style={styles.editButton} onPress={() => { selectTicket(item); setEditorVisible(true); }}></Button>\n      <Button size='small' status='success' accessoryLeft={ValidateIcon} style={styles.editButton} onPress={() => { manualValidation(item.ID); }}></Button>\n    </>\n  );\n  const renderItemValidate = (props: any, item: any) => (\n    <Button size='small' status='success' accessoryLeft={ValidateIcon} style={styles.editButton} onPress={() => { manualValidation(item.ID); }}></Button>\n  );\n\n  function onSelectTicketShowQr(item: any) {\n    setPerson(item);\n    setQrGeneratorModalVisiblity(true);\n\n  }\n\n  const renderItem = ({ item, index }: any) => (\n    <ListItem\n      key={index}\n      title={() => <Text style={styles.listItemTitle}>{item.name}</Text>}\n      description={item.ID}\n      accessoryLeft={renderItemIcon}\n      accessoryRight={(props) => isAdmin() ? renderItemEditAndValidate(props, item) : renderItemValidate(props, item)}\n      onPress={() => { selectTicket(item); onSelectTicketShowQr(item); }}\n      style={styles.listItem}\n    />\n  );\n\n  return (\n    <>\n      <View style={{ flex: 1 }}>\n        <TopNavigation\n          style={{ elevation: 5 }}\n          title={() => <Text style={{ flex: 1, textAlign: 'center', fontSize: 20 }}>List of tickets</Text>}\n        />\n        <Divider />\n        <List\n          style={styles.list}\n          data={searchedTickets}\n          renderItem={renderItem}\n          ListEmptyComponent={<Text style={styles.emptyListText}>No tickets found!</Text>}\n        />\n        {(isAdmin() && selectedTicket != null) ? <ModalTicketEditor selectedTicket={selectedTicket} onClose={() => setEditorVisible(false)} visible={editorVisible} /> : <></>}\n        <Divider />\n        <View style={{ elevation: 5 }}>\n          <SearchBar setSearchedTickets={setSearchedTickets} allTickets={allTickets} />\n        </View>\n      </View>\n      <ModalQrCodeGenerator modalVisiblity={qrGeneratorModalVisiblity} setModalVisiblity={setQrGeneratorModalVisiblity} dataToModal={person} />\n    </>\n  );\n};\n\nfunction SearchBar({ setSearchedTickets, allTickets }: any) {\n  const [value, setValue] = React.useState('');\n\n  const clearSearchBar = () => {\n    setValue('');\n    setSearchedTickets(allTickets);\n  };\n\n  const renderIcon = (props: any) => (\n    <TouchableWithoutFeedback onPress={clearSearchBar}>\n      <Icon {...props} name={'close-outline'} />\n    </TouchableWithoutFeedback>\n  );\n\n  const onChangeText = (nextValue: any) => {\n    setValue(nextValue);\n    if (nextValue == '') {\n      setSearchedTickets(allTickets);\n    } else {\n      setSearchedTickets(allTickets.filter(\n        // ticket => removeDiacritics(ticket.name.toLowerCase()).includes(removeDiacritics(nextValue.toLowerCase())) ||\n        (ticket: any) => removeDiacritics(ticket.name.toLowerCase()).includes(removeDiacritics(nextValue.toLowerCase())) ||\n          ticket.ID.toLowerCase().includes(nextValue.toLowerCase()))\n      );\n    }\n  };\n\n  return (\n    <Input\n      value={value}\n      autoCapitalize='none'\n      autoCorrect={false}\n      placeholder='Search'\n      style={styles.searchBar}\n      clearButtonMode='while-editing'\n      accessoryRight={renderIcon}\n      onChangeText={onChangeText}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  list: {\n    width: '100%',\n    backgroundColor: '#f4f4f4',\n    padding: 15,\n  },\n  listItem: {\n    margin: 5,\n    borderRadius: 15,\n  },\n  listItemTitle: {\n    fontSize: 20\n  },\n  editButton: {\n    borderRadius: 12,\n    width: 15,\n    marginLeft: 5\n  },\n  emptyListText: {\n    fontSize: 40,\n    marginTop: '20%',\n    alignSelf: 'center'\n  },\n  searchBar: {\n    backgroundColor: '#fff',\n    padding: 10,\n    color: '#000',\n    borderColor: '#aaa',\n    borderRadius: 15,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n});\n\n\nfunction removeDiacritics(str: any) {\n  var defaultDiacriticsRemovalMap = [\n    { 'base': 'a', 'letters': /[áä]/g },\n    { 'base': 'c', 'letters': /[č]/g },\n    { 'base': 'd', 'letters': /[ď]/g },\n    { 'base': 'e', 'letters': /[ěé]/g },\n    { 'base': 'i', 'letters': /[í]/g },\n    { 'base': 'l', 'letters': /[ĺľ]/g },\n    { 'base': 'n', 'letters': /[ň]/g },\n    { 'base': 'o', 'letters': /[óô]/g },\n    { 'base': 'r', 'letters': /[řŕ]/g },\n    { 'base': 's', 'letters': /[š]/g },\n    { 'base': 't', 'letters': /[ť]/g },\n    { 'base': 'u', 'letters': /[ůú]/g },\n    { 'base': 'y', 'letters': /[ý]/g },\n    { 'base': 'z', 'letters': /[ž]/g },\n  ];\n  for (var i = 0; i < defaultDiacriticsRemovalMap.length; i++) {\n    str = str.replace(defaultDiacriticsRemovalMap[i].letters, defaultDiacriticsRemovalMap[i].base);\n  }\n  return str;\n}\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, Text, Modal, Card } from '@ui-kitten/components';\n\nexport default function ModalTicketValidator(properties: any) {\n  const Header = (props: any) => (\n    <View {...props}>\n      <Text category='h3'>{properties.user}</Text>\n      <Text category='s1'>{properties.desc}</Text>\n    </View>\n  );\n\n  const Footer = (props: any) => (\n    <View {...props} style={[props.style, styles.footerContainer]}>\n      <Button\n        style={styles.footerControl}\n        size='small'\n        status='basic'\n        onPress={() => properties.setVisible(false)}>\n        CANCEL\n      </Button>\n      <Button\n        style={styles.footerControl}\n        size='small'\n        onPress={() => properties.setVisible(false)}>\n        UPDATE\n      </Button>\n    </View>\n  );\n\n  function CardAccessoriesShowcase() {\n    return (\n      <Card style={styles.card} header={Header} footer={Footer}>\n        <Text>\n          The Text\n        </Text>\n      </Card>\n    );\n  }\n\n  return (\n    <Modal\n      visible={properties.visible}\n      backdropStyle={styles.backdrop}>\n      <CardAccessoriesShowcase />\n    </Modal>\n  );\n}\n\nconst styles = StyleSheet.create({\n  topContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  card: {\n    flex: 1,\n    margin: 2,\n  },\n  footerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  footerControl: {\n    marginHorizontal: 2,\n  },\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  }\n});\n","import React, { useEffect, useState } from 'react';\nimport { StyleSheet, useWindowDimensions, KeyboardAvoidingView, View, Alert } from 'react-native';\nimport QrReader from './components/QrReader';\nimport { Text, Input, Spinner, Button } from '@ui-kitten/components';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport TicketsScreen from '../screens/TicketsScreen';\nimport ModalTicketValidator from './components/ModalTicketValidator';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport ModalQrCodeGenerator from './components/ModalQrCodeGenerator';\n\ntype Granted = { type: 'GRANTED' };\ntype Denied = { type: 'DENIED' };\ntype Loading = { type: 'LOADING' };\n\ntype CameraState = Granted | Denied | Loading;\n\nexport default function QrScreen({ ticketType, markTicketAsUsed }: any) {\n\n  const [hasPermission, setHasPermission] = useState<CameraState>({ type: 'LOADING' });\n  const DrawerR = createDrawerNavigator();\n  const windowWidth = useWindowDimensions().width;\n\n  const manualValidationfromList = (id: string) => {\n    fetchAndDisplayModal(id);\n  }\n\n  // ######################################################\n  // FROM QrReader.tsx\n  // ######################################################\n  const [scanned, setScanned] = useState(false);\n  const [modalVisiblity, setModalVisiblity] = useState(false);\n  //response which is used by modal but not shown\n  const [responseToModal, setResponseToModal] = useState(null);\n  //data shown in modal\n  const [dataToModal, setDataToModal] = useState([\"\"]);\n\n  const itemToValidate = ticketType.key;\n  const [manualValidationValue, setManualValidationValue] = React.useState('');\n\n  // handler when bacrode is scanned\n  const handleBarCodeScanned = ({ type, data }: any) => {\n    fetchAndDisplayModal(data);\n  };\n\n  // handler when bacrode is scanned\n  const fetchAndDisplayModal = (data: string) => {\n    setScanned(true);\n    setModalVisiblity(true)\n    fetchUserData(data);\n    // alert(`Bar code with type ${type} and data ${data} has been scanned! Chosen ${itemToValidate} doslo zpet ${JSON.stringify(responseToModal)}`);\n  };\n\n  //fetch all data about one user - user ID is data scanned from QR code\n  const fetchUserData = (user: any) => {\n    fetch(`https://sjezd-qr-ticket.herokuapp.com/get/${user}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setResponseToModal(data.message[0]);\n        setDataToModal(getTextForModal(data.message[0], itemToValidate));\n      })\n      .catch(function (error) {\n        alert(\"ERROR: Chyba připojení k databázi při načítání vstupenky.\" + error);\n      });\n    // .then(data => console.log(data));\n  };\n\n  function getTextForModal(user_data: any, ticketInterest: any) {\n    let res = validateTicket(user_data, ticketInterest);\n\n    switch (res) {\n      case 'used':\n        return [\"warning\", \"Vstupenka již byla odbavena dříve!\", user_data?.name, user_data[ticketInterest]]\n      case 'ok':\n        return [\"success\", \"Vstupenka odbavena.\", user_data?.name, user_data[ticketInterest]]\n      case 'not':\n        return [\"info\", \"Nezakoupeno!\", user_data?.name, user_data[ticketInterest]]\n      default:\n        return [\"danger\", \"Nastala chyba\", user_data?.name, user_data[ticketInterest]]\n    }\n  }\n\n  //function gets object from server and checks if the required ticket is valid/used...\n  function validateTicket(user_data: any, ticketInterest: any) {\n    if (!user_data) {\n      return \"error\";\n    } else if (user_data && user_data.hasOwnProperty(\"timestamp_\" + ticketInterest) && user_data[\"timestamp_\" + ticketInterest] !== null) {\n      return \"used\";\n    } else if (user_data && user_data.hasOwnProperty(ticketInterest) && [\"true\", \"all\", \"sobota\", \"maso\", \"bezmaso\"].includes(user_data[ticketInterest])) {\n      { // if (dataToModal) {\n        //TODO fetch na oznaceni vstupenky\n        //}\n        return \"ok\";\n      }\n    } else if (user_data && user_data.hasOwnProperty(ticketInterest) && [null, \"\", false].includes(user_data[ticketInterest])) {\n      return \"not\";\n    } else {\n      return \"error\";\n    }\n  }\n\n  // ######################################################\n\n  useEffect(() => {\n    let permissionNeeded = true;\n\n    BarCodeScanner.requestPermissionsAsync().then(({ status }) => {\n      if (permissionNeeded) setHasPermission(status === 'granted' ? { type: 'GRANTED' } : { type: 'DENIED' });\n    });\n\n    return () => { permissionNeeded = false };\n  }, []);\n\n  if (hasPermission.type === 'DENIED') {\n    return (\n      <View style={{ height: '100%', justifyContent: 'center' }}>\n        <Text category='h4' style={{ textAlign: 'center' }}>Please allow Camera</Text>\n        <Button onPress={() => {\n          BarCodeScanner.requestPermissionsAsync().then(({ status }) => {\n            setHasPermission(status === 'granted' ? { type: 'GRANTED' } : { type: 'DENIED' });\n          });\n        }}>Done</Button>\n      </View>\n    );\n  }\n\n  if (hasPermission.type === 'LOADING') {\n    return (\n      <View style={{ flex: 1, height: '100%', justifyContent: 'center', alignItems: 'center' }}>\n        <Spinner size='giant' />\n      </View>\n    );\n  }\n\n  const clearSearchBar = () => {\n    setManualValidationValue('');\n  };\n\n  function setValueAndValidate(nextValue: string) {\n    setManualValidationValue(nextValue);\n    // if (nextValue.length === 6) {\n    //   fetchAndDisplayModal(nextValue);\n    // }\n  }\n\n  const Content = () => (\n    <View style={styles.container}>\n      <Text style={{ position: 'absolute', top: 0, zIndex: 100, fontSize: 30, width: '100%', textAlign: 'center', padding: 7, backgroundColor: 'white' }}>{ticketType.title}</Text>\n      <QrReader\n        itemToValidate={ticketType.key}\n        markAsUsed={markTicketAsUsed}\n        hasPermission={hasPermission}\n        setScanned={setScanned}\n        modalVisiblity={modalVisiblity}\n        setModalVisiblity={setModalVisiblity}\n        responseToModal={responseToModal}\n        dataToModal={dataToModal}\n        scanned={scanned}\n        handleBarCodeScanned={handleBarCodeScanned}\n      />\n\n      {/* Manual Validation */}\n      <View style={styles.searchBox}>\n        <Input\n          value={manualValidationValue}\n          autoCapitalize='characters'\n          autoCorrect={false}\n          placeholder='or Type QR code'\n          status='control'\n          size='large'\n          maxLength={10}\n          style={styles.searchBar}\n          textStyle={styles.searchBarText}\n          // onFocus={clearSearchBar}\n          onChangeText={nextValue => setManualValidationValue(nextValue)}\n          onSubmitEditing={e => fetchAndDisplayModal(e.nativeEvent.text)}\n        />\n      </View>\n\n      <ModalTicketValidator />\n    </View>\n  )\n\n  function CustomDrawerContent(props: any) {\n    return (\n      <KeyboardAvoidingView style={{ flex: 1 }} behavior='height' keyboardVerticalOffset={40}>\n        <TicketsScreen manualValidation={manualValidationfromList} />\n      </KeyboardAvoidingView>\n    );\n  }\n\n  return (\n    <DrawerR.Navigator initialRouteName='QRScreen' backBehavior='initialRoute' screenOptions={{ drawerPosition: 'right', drawerStyle: { width: '90%' }, headerShown: false }} drawerContent={(props) => <CustomDrawerContent {...props} />}>\n      <DrawerR.Screen\n        name='QRScreen'\n        component={Content}\n        options={{ drawerLabel: 'QRScreen', swipeEdgeWidth: windowWidth / 2 }}\n      />\n    </DrawerR.Navigator>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    justifyContent: 'space-between',\n    flexDirection: 'column',\n    backgroundColor: 'black'\n  },\n  searchBox: {\n    backgroundColor: 'transparent',\n    height: '80%',\n    justifyContent: 'flex-end'\n  },\n  searchBar: {\n    width: '50%',\n    alignSelf: 'center',\n    backgroundColor: 'rgba(80,80,80,0.5)'\n  },\n  searchBarText: {\n    textAlign: 'center',\n  }\n});","import React from 'react';\nimport { StyleSheet, View, Image } from 'react-native';\nimport { Button, Text, Input, Tooltip } from '@ui-kitten/components';\nimport { validateEntryCode } from '../components/Database';\n\nexport default function LoginScreen({ navigation }) {\n  const [visible, setVisible] = React.useState(false);\n  const [entryCode, setEntryCode] = React.useState('');\n\n  function clearEntryCode() {\n    setEntryCode('');\n  };\n\n  function confirmLogIn() {\n    if(validateEntryCode(entryCode)) {\n      clearEntryCode();\n      setVisible(false);\n      navigation.navigate('QrScreen');\n    } else\n      setVisible(true);\n  }\n\n  const renderEntryInput = () => (\n    <Input\n      placeholder='Type your entry code'\n      value={entryCode}\n      autoCapitalize='characters'\n      autoFocus={true}\n      autoCorrect={false}\n      status='info'\n      maxLength={10}\n      size='large'\n      style={styles.input}\n      textStyle={styles.inputText}\n      onFocus={clearEntryCode}\n      onChangeText={nextValue => setEntryCode(nextValue)}\n      onSubmitEditing={confirmLogIn} />\n  );\n\n  return (\n        <View style={styles.container}>\n          <View>\n            <Image style={styles.logoImg} source={require('../assets/images/icon.png')}/>\n            <Text style={styles.title}>\n              QR Ticket\n            </Text>\n          </View>\n          <View>\n            <Tooltip\n              anchor={renderEntryInput}\n              visible={visible}\n              placement='top'\n              onBackdropPress={() => setVisible(false)}>\n              Bad entry code!\n            </Tooltip>\n          </View>\n          <View>\n            <Button style={styles.button} size='large' status='info' onPress={() => confirmLogIn()}>LOG IN</Button>\n          </View>\n        </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 100,\n    justifyContent: 'center',\n    flex: 1\n  },\n  title: {\n    fontSize: 42,\n    textAlign: 'center'\n  },\n  input: {\n    borderRadius: 40,\n  },\n  inputText: {\n    textAlign: 'center',\n    fontSize: 20,\n    paddingVertical: 7,\n    color: 'black',\n  },\n  logoImg: {\n    alignSelf: 'center',\n    width: '70%',\n    height: '45%',\n    borderRadius: 100,\n    resizeMode: 'contain'\n  },\n  button: {\n    marginTop: 20,\n    marginBottom: '50%',\n    paddingVertical: 17,\n    borderRadius: 40\n  }\n});\n","import React from 'react';\nimport { BottomNavigation, BottomNavigationTab, Icon, Text, Divider, TopNavigation, Card, useTheme, Button } from '@ui-kitten/components';\nimport { ScrollView, StyleSheet, View } from 'react-native';\nimport { getTicketTypes } from '../components/Database';\n\nexport default function SettingsScreen({ticketType, markTicketAsUsed, setTicketType, setMarkTicketAsUsed}) {\n\n    const ticketTypes = getTicketTypes();\n\n    if (ticketType.key == null && ticketTypes.length) {\n      setTicketType(ticketTypes[0]);\n    }\n\n    const ValidateIcon = (props) => (\n      <Icon {...props} name='eye-outline'/>\n    );\n\n    const CheckInIcon = (props) => (\n      <Icon {...props} name='checkmark-circle-2-outline'/>\n    );\n\n    const theme = useTheme();\n    return (\n        <View style={styles.container}>\n            <TopNavigation\n                style={{ elevation: 5 }}\n                title={() => <Text style={{flex: 1, textAlign: 'center', fontSize: 20 }}>Choose ticket type to scan</Text>}\n            />\n            <Divider />\n            <ScrollView contentContainerStyle={styles.cardBoxContent}>\n            {ticketTypes.map((obj, idx) =>\n              <Card key={obj.key} style={[ styles.card, (ticketType.key === obj.key) && { backgroundColor: theme['color-primary-default'] } ]} onPress={() => { setTicketType(obj); }}>\n                <Text style={[ styles.cardText, (ticketType.key === obj.key) && { color: 'white' } ]}>{obj.title}</Text>\n              </Card>\n            )}\n            </ScrollView>\n            <Divider />\n            <BottomNavigation\n              selectedIndex={markTicketAsUsed}\n              onSelect={setTicketType}\n              indicatorStyle={{ backgroundColor: theme['color-primary-200'], height: '130%' }}\n              style={{ elevation: 5 }}\n            >\n              <BottomNavigationTab title='Only validate' icon={ValidateIcon}/>\n              <BottomNavigationTab title='Also mark as used' icon={CheckInIcon}/>\n            </BottomNavigation>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    justifyContent: 'center'\n  },\n  cardBoxContent: {\n    justifyContent: 'center',\n    flex: 1,\n    width: '100%',\n    backgroundColor: '#eee'\n  },\n  cardText: {\n    textAlign: 'center',\n    fontSize: 25\n  },\n  card: {\n    width: '90%',\n    margin: 10,\n    justifyContent: 'center',\n    alignSelf: 'center',\n    borderRadius: 15\n  }\n});\n","import React from 'react';\n\nimport QrScreen from '../screens/QrScreen';\nimport TicketsScreen from '../screens/TicketsScreen';\nimport LoginScreen from '../screens/LoginScreen';\nimport SettingsScreen from '../screens/SettingsScreen';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { useWindowDimensions } from 'react-native';\n\nexport default function Navigator() {\n  const DrawerL = createDrawerNavigator();\n  const windowWidth = useWindowDimensions().width;\n\n  const [ticketType, setTicketType] = React.useState({ key: null, title: 'No selected ticket type' });\n  const [markTicketAsUsed, setMarkTicketAsUsed] = React.useState(0);\n\n  const QrScreenContent = () => (\n    <QrScreen ticketType={ticketType} markTicketAsUsed={markTicketAsUsed} />\n  )\n\n  const Settings = () => (\n    <SettingsScreen ticketType={ticketType} markTicketAsUsed={markTicketAsUsed} setTicketType={setTicketType} setMarkTicketAsUsed={setMarkTicketAsUsed} />\n  )\n\n  return (\n    //  onStateChange={(state) => console.log('New state is', state)}\n    <NavigationContainer>\n      <DrawerL.Navigator initialRouteName='LoginScreen' backBehavior='initialRoute' drawerContent={Settings} screenOptions={{ drawerPosition: 'left', drawerStyle: { width: '90%' }, headerShown: false }}>\n        <DrawerL.Screen\n          name='LoginScreen'\n          component={LoginScreen}\n          options={{ drawerLabel: 'LoginScreen', swipeEdgeWidth: 0, gestureEnabled: false }}\n        />\n        <DrawerL.Screen\n          name='QrScreen'\n          component={QrScreenContent}\n          options={{ drawerLabel: 'QrScreen', swipeEdgeWidth: windowWidth / 2 }}\n        />\n      </DrawerL.Navigator>\n    </NavigationContainer>\n  );\n}\n","import React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport * as eva from '@eva-design/eva';\nimport { ApplicationProvider, IconRegistry } from '@ui-kitten/components';\nimport { EvaIconsPack } from '@ui-kitten/eva-icons';\nimport { StatusBar } from 'react-native';\n\nimport Navigator from './navigation/';\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n    <>\n      <ApplicationProvider {...eva} theme={eva.light}>\n        <StatusBar hidden={false} backgroundColor='gray'/>\n        <IconRegistry icons={EvaIconsPack} />\n        <SafeAreaProvider>\n          <Navigator />\n        </SafeAreaProvider>\n      </ApplicationProvider>\n    </>\n    );\n  }\n}\n","import { FontAwesome } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...FontAwesome.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","module.exports = __webpack_public_path__ + \"static/media/icon.f7cdf9f7.png\";"],"sourceRoot":""}